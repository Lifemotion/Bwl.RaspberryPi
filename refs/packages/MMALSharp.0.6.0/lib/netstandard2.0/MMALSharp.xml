<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MMALSharp</name>
    </assembly>
    <members>
        <member name="T:MMALSharp.Callbacks.ConnectionCallbackHandler">
            <summary>
            Base class for connection callback handlers.
            </summary>
        </member>
        <member name="P:MMALSharp.Callbacks.ConnectionCallbackHandler.WorkingConnection">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.Callbacks.ConnectionCallbackHandler.#ctor(MMALSharp.IConnection)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Callbacks.ConnectionCallbackHandler"/>.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:MMALSharp.Callbacks.ConnectionCallbackHandler.InputCallback(MMALSharp.IBuffer)">
            <summary>
            The input port callback function to carry out.
            </summary>
            <param name="buffer">The working buffer header.</param>
        </member>
        <member name="M:MMALSharp.Callbacks.ConnectionCallbackHandler.OutputCallback(MMALSharp.IBuffer)">
            <inheritdoc />
        </member>
        <member name="T:MMALSharp.Callbacks.DefaultConnectionCallbackHandler">
            <summary>
            Default callback handler for connections.
            </summary>
        </member>
        <member name="M:MMALSharp.Callbacks.DefaultConnectionCallbackHandler.#ctor(MMALSharp.IConnection)">
            <summary>
            Create a new instance of <see cref="T:MMALSharp.Callbacks.DefaultConnectionCallbackHandler"/>.
            </summary>
            <param name="connection">The connection object.</param>
        </member>
        <member name="T:MMALSharp.Callbacks.DefaultInputPortCallbackHandler">
            <summary>
            A default callback handler for ports.
            </summary>
        </member>
        <member name="M:MMALSharp.Callbacks.DefaultInputPortCallbackHandler.#ctor(MMALSharp.Ports.Inputs.IInputPort,MMALSharp.Handlers.IInputCaptureHandler)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Callbacks.DefaultPortCallbackHandler"/>.
            </summary>
            <param name="port">The working <see cref="T:MMALSharp.Ports.Inputs.IInputPort"/>.</param>
            <param name="handler">The input port capture handler.</param>
        </member>
        <member name="T:MMALSharp.Callbacks.DefaultOutputPortCallbackHandler">
            <summary>
            A default callback handler for ports.
            </summary>
        </member>
        <member name="M:MMALSharp.Callbacks.DefaultOutputPortCallbackHandler.#ctor(MMALSharp.Ports.Outputs.IOutputPort,MMALSharp.Handlers.IOutputCaptureHandler)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Callbacks.DefaultOutputPortCallbackHandler"/>.
            </summary>
            <param name="port">The working <see cref="T:MMALSharp.Ports.Outputs.IOutputPort"/>.</param>
            <param name="handler">The output port capture handler.</param>
        </member>
        <member name="T:MMALSharp.Callbacks.DefaultPortCallbackHandler">
            <summary>
            A default callback handler for ports.
            </summary>
        </member>
        <member name="M:MMALSharp.Callbacks.DefaultPortCallbackHandler.#ctor(MMALSharp.Ports.IPort,MMALSharp.Handlers.IOutputCaptureHandler)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Callbacks.DefaultPortCallbackHandler"/>.
            </summary>
            <param name="port">The working <see cref="T:MMALSharp.Ports.IPort"/>.</param>
            <param name="handler">The port capture handler.</param>
        </member>
        <member name="T:MMALSharp.Callbacks.FastImageOutputCallbackHandler">
            <summary>
            A callback handler specifically for rapid image capture from the camera's video port.
            </summary>
        </member>
        <member name="M:MMALSharp.Callbacks.FastImageOutputCallbackHandler.#ctor(MMALSharp.Ports.Outputs.IVideoPort,MMALSharp.Handlers.IOutputCaptureHandler)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Callbacks.FastImageOutputCallbackHandler"/>.
            </summary>
            <param name="port">The working <see cref="T:MMALSharp.Ports.Outputs.IOutputPort"/>.</param>
            <param name="handler">The output port capture handler.</param>
        </member>
        <member name="M:MMALSharp.Callbacks.FastImageOutputCallbackHandler.Callback(MMALSharp.IBuffer)">
            <inheritdoc />
        </member>
        <member name="T:MMALSharp.Callbacks.ICallbackHandler">
            <summary>
            Represents a callback handler.
            </summary>
        </member>
        <member name="T:MMALSharp.Callbacks.IConnectionCallbackHandler">
            <summary>
            Represents a connection callback handler.
            </summary>
        </member>
        <member name="P:MMALSharp.Callbacks.IConnectionCallbackHandler.WorkingConnection">
            <summary>
            The connection this callback handler is used with.
            </summary>
        </member>
        <member name="M:MMALSharp.Callbacks.IConnectionCallbackHandler.InputCallback(MMALSharp.IBuffer)">
            <summary>
            The input port callback function to carry out.
            </summary>
            <param name="buffer">The working buffer header.</param>
        </member>
        <member name="M:MMALSharp.Callbacks.IConnectionCallbackHandler.OutputCallback(MMALSharp.IBuffer)">
            <summary>
            The output port callback function to carry out.
            </summary>
            <param name="buffer">The working buffer header.</param>
        </member>
        <member name="T:MMALSharp.Callbacks.IInputCallbackHandler">
            <summary>
            Represents a callback handler linked to an Input port.
            </summary>
        </member>
        <member name="M:MMALSharp.Callbacks.IInputCallbackHandler.CallbackWithResult(MMALSharp.IBuffer)">
            <summary>
            The callback function to carry out. Applies to input ports.
            </summary>
            <param name="buffer">The working buffer header.</param>
            <returns>A <see cref="T:MMALSharp.Handlers.ProcessResult"/> object based on the result of the callback function.</returns>
        </member>
        <member name="T:MMALSharp.Callbacks.InputPortCallbackHandler`2">
            <summary>
            Represents an input port callback handler.
            </summary>
            <typeparam name="TPort">The input port type linked to this callback handler.</typeparam>
            <typeparam name="TCaptureHandler">The capture handler type linked to this callback handler.</typeparam>
        </member>
        <member name="P:MMALSharp.Callbacks.InputPortCallbackHandler`2.WorkingPort">
            <summary>
            The working port.
            </summary>
        </member>
        <member name="P:MMALSharp.Callbacks.InputPortCallbackHandler`2.CaptureHandler">
            <summary>
            The active capture handler.
            </summary>
        </member>
        <member name="M:MMALSharp.Callbacks.InputPortCallbackHandler`2.#ctor(`0,`1)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Callbacks.InputPortCallbackHandler`2"/>.
            </summary>
            <param name="port">The working port.</param>
            <param name="handler">The input port capture handler.</param>
        </member>
        <member name="M:MMALSharp.Callbacks.InputPortCallbackHandler`2.CallbackWithResult(MMALSharp.IBuffer)">
            <summary>
            Responsible for feeding data into the input port.
            </summary>
            <param name="buffer">The working buffer.</param>
            <returns>A <see cref="T:MMALSharp.Handlers.ProcessResult"/> based on the result of the operation.</returns>
        </member>
        <member name="T:MMALSharp.Callbacks.IOutputCallbackHandler">
            <summary>
            Represents an output port callback handler.
            </summary>
        </member>
        <member name="M:MMALSharp.Callbacks.IOutputCallbackHandler.Callback(MMALSharp.IBuffer)">
            <summary>
            The callback function to carry out. Applies to output, control and connection ports.
            </summary>
            <param name="buffer">The working buffer header.</param>
        </member>
        <member name="T:MMALSharp.Callbacks.IVideoOutputCallbackHandler">
            <summary>
            Represents a video output port callback handler.
            </summary>
        </member>
        <member name="T:MMALSharp.Callbacks.PortCallbackHandler`2">
            <summary>
            The base class for Output port callback handlers.
            </summary>
            <typeparam name="TPort">The port type.</typeparam>
            <typeparam name="TCaptureHandler">The capture handler type.</typeparam>
        </member>
        <member name="P:MMALSharp.Callbacks.PortCallbackHandler`2.WorkingPort">
            <summary>
            The working port.
            </summary>
        </member>
        <member name="P:MMALSharp.Callbacks.PortCallbackHandler`2.CaptureHandler">
            <summary>
            The active capture handler.
            </summary>
        </member>
        <member name="M:MMALSharp.Callbacks.PortCallbackHandler`2.#ctor(`0,`1)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Callbacks.PortCallbackHandler`2"/>.
            </summary>
            <param name="port">The working <see cref="T:MMALSharp.Ports.IPort"/>.</param>
            <param name="handler">The port capture handler.</param>
        </member>
        <member name="M:MMALSharp.Callbacks.PortCallbackHandler`2.Callback(MMALSharp.IBuffer)">
            <inheritdoc />
        </member>
        <member name="T:MMALSharp.Callbacks.VideoOutputCallbackHandler">
            <summary>
            Represents a callback handler specifically for <see cref="T:MMALSharp.Components.MMALVideoEncoder"/> components.
            </summary>
        </member>
        <member name="P:MMALSharp.Callbacks.VideoOutputCallbackHandler.Split">
            <summary>
            Object containing properties used to determine when we should perform a file split.
            </summary>
        </member>
        <member name="P:MMALSharp.Callbacks.VideoOutputCallbackHandler.LastSplit">
            <summary>
            States the time we last did a file split.
            </summary>
        </member>
        <member name="P:MMALSharp.Callbacks.VideoOutputCallbackHandler.PrepareSplit">
            <summary>
            Property to indicate whether on the next callback we should split. This is used so that we can request an I-Frame from the camera
            and this can be applied on the next run to the newly created file.
            </summary>
        </member>
        <member name="P:MMALSharp.Callbacks.VideoOutputCallbackHandler.StoreMotionVectors">
            <summary>
            Property to indicate whether we should store motion vectors when processing image frames. 
            Motion vector data will be present when the buffer header equals "MMAL_BUFFER_HEADER_FLAG_CODECSIDEINFO".
            </summary>
        </member>
        <member name="M:MMALSharp.Callbacks.VideoOutputCallbackHandler.#ctor(MMALSharp.Ports.Outputs.IVideoPort,MMALSharp.Handlers.IVideoCaptureHandler,MMALSharp.Config.Split,System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Callbacks.VideoOutputCallbackHandler"/>.
            </summary>
            <param name="port">The working <see cref="T:MMALSharp.Ports.Outputs.IOutputPort"/>.</param>
            <param name="handler">The output port capture handler.</param>
            <param name="split">Configure to split into multiple files.</param>
            <param name="storeMotionVectors">Indicates whether we should store motion vectors.</param>
        </member>
        <member name="M:MMALSharp.Callbacks.VideoOutputCallbackHandler.Callback(MMALSharp.IBuffer)">
            <summary>
            The callback function to carry out.
            </summary>
            <param name="buffer">The working buffer header.</param>
        </member>
        <member name="T:MMALSharp.Components.EncoderComponents.IEncoder">
            <summary>
            Represents an encoder component.
            </summary>
        </member>
        <member name="T:MMALSharp.Components.EncoderComponents.IImageDecoder">
            <summary>
            Represents a image decoder component.
            </summary>
        </member>
        <member name="T:MMALSharp.Components.EncoderComponents.IImageEncoder">
            <summary>
            Represents an image encoder component.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.EncoderComponents.IImageEncoder.RawBayer">
            <summary>
            Flag to return raw Bayer metadata with JPEG frames.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.EncoderComponents.IImageEncoder.UseExif">
            <summary>
            Flag to add EXIF tags to image frames.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.EncoderComponents.IImageEncoder.ExifTags">
            <summary>
            An array of user provided EXIF tags.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.EncoderComponents.IImageEncoder.ContinuousCapture">
            <summary>
            When enabled and if configured, image frames will be quickly processed by the camera's video port.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.EncoderComponents.IImageEncoder.JpegThumbnailConfig">
            <summary>
            The JPEG thumbnail configuration object.
            </summary>
        </member>
        <member name="T:MMALSharp.Components.EncoderComponents.IVideoDecoder">
            <summary>
            Represents a video decoder component.
            </summary>
        </member>
        <member name="T:MMALSharp.Components.EncoderComponents.IVideoEncoder">
            <summary>
            Represents a video encoder component.
            </summary>
        </member>
        <member name="T:MMALSharp.Components.IMMALConvert">
            <summary>
            Supports converting user provided image data.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.IMMALConvert.Convert(System.Int32)">
            <summary>
            Encodes/decodes user provided image data.
            </summary>
            <param name="outputPort">The output port to begin processing on.</param>
        </member>
        <member name="T:MMALSharp.Components.MMALEncoderBase">
            <summary>
            Represents a base class for all encoder components.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALEncoderBase.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Components.MMALEncoderBase"/>.
            </summary>
            <param name="encoderName">The name of the encoder component.</param>
        </member>
        <member name="T:MMALSharp.Components.MMALImageDecoder">
            <summary>
            A conformant image decode component, which takes encoded still images
            in various compressed formats on its input port, and decodes the image
            into raw pixels which are emitted on the output port.
            https://github.com/raspberrypi/firmware/blob/master/documentation/ilcomponents/image_decode.html
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALImageDecoder.#ctor">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Components.MMALImageDecoder"/>.
            </summary>
        </member>
        <member name="T:MMALSharp.Components.MMALImageEncoder">
            <summary>
            A conformant image encode component, which takes raw pixels on its
            input port, and encodes the image into various compressed formats on
            the output port.
            https://github.com/raspberrypi/firmware/blob/master/documentation/ilcomponents/image_encode.html
            </summary>
        </member>
        <member name="F:MMALSharp.Components.MMALImageEncoder.MaxExifPayloadLength">
            <summary>
            Represents the maximum length of a formatted EXIF tag. This includes the tag's key, an equals sign, the tag's value and a null char.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.MMALImageEncoder.RawBayer">
            <summary>
            When enabled, raw bayer metadata will be included in JPEG still captures.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.MMALImageEncoder.UseExif">
            <summary>
            When enabled, EXIF metadata will be included in image stills.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.MMALImageEncoder.ExifTags">
            <summary>
            Custom list of user defined EXIF metadata.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.MMALImageEncoder.ContinuousCapture">
            <summary>
            If true, this component will be configured to process rapidly captured frames from the camera's video port.
            Note: The component pipeline must be configured as such. 
            </summary>
        </member>
        <member name="P:MMALSharp.Components.MMALImageEncoder.JpegThumbnailConfig">
            <summary>
            Configuration for JPEG thumbnail embedding.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALImageEncoder.#ctor(System.Boolean,System.Boolean,System.Boolean,MMALSharp.Config.JpegThumbnail,MMALSharp.Config.ExifTag[])">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.Components.MMALImageEncoder"/> class with the specified handler.
            </summary>
            <param name="rawBayer">Specifies whether to include raw bayer image data.</param>
            <param name="useExif">Specifies whether any EXIF tags should be used.</param>
            <param name="continuousCapture">Configure component for rapid capture mode.</param>
            <param name="thumbnailConfig">Configures the embedded JPEG thumbnail.</param>
            <param name="exifTags">A collection of custom EXIF tags.</param>
        </member>
        <member name="M:MMALSharp.Components.MMALImageEncoder.ConfigureOutputPort(System.Int32,MMALSharp.Ports.IMMALPortConfig,MMALSharp.Handlers.IOutputCaptureHandler)">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.Components.MMALImageEncoder.AddExifTags(MMALSharp.Config.ExifTag[])">
            <summary>
            Adds EXIF tags to the resulting image.
            </summary>
            <param name="exifTags">A list of user defined EXIF tags.</param>
        </member>
        <member name="M:MMALSharp.Components.MMALImageEncoder.AddExifTag(MMALSharp.Config.ExifTag)">
            <summary>
            Provides a facility to add an EXIF tag to the image. 
            </summary>
            <param name="exifTag">The EXIF tag to add to.</param>
        </member>
        <member name="T:MMALSharp.Components.MMALVideoDecoder">
            <summary>
            This conformant component accepts encoded video in a number of
            different formats, and decodes it to raw YUV frames.
            https://github.com/raspberrypi/firmware/blob/master/documentation/ilcomponents/video_decode.html
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALVideoDecoder.#ctor">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Components.MMALVideoDecoder"/>.
            </summary>
        </member>
        <member name="T:MMALSharp.Components.MMALVideoEncoder">
            <summary>
            This component accepts raw video frames and compresses them, emitting
            encoded video.It can accept YUV420 packed planar format, providing
            the slice height is the same as the frame height so a single buffer is
            a full frame.To gain efficiency it also accepts a proprietary image
            format from the camera component.
            https://github.com/raspberrypi/firmware/blob/master/documentation/ilcomponents/video_encode.html
            </summary>
        </member>
        <member name="F:MMALSharp.Components.MMALVideoEncoder.MaxBitrateMJPEG">
            <summary>
            Signifies the max bitrate supported for MJPEG (25Mbits/s)
            </summary>
        </member>
        <member name="F:MMALSharp.Components.MMALVideoEncoder.MaxBitrateLevel4">
            <summary>
            Signifies the max bitrate supported for H.264 Level 4 (25Mbits/s)
            </summary>
        </member>
        <member name="F:MMALSharp.Components.MMALVideoEncoder.MaxBitrateLevel42">
            <summary>
            Signifies the max bitrate supported for H.264 Level 4.2 (62.5Mbits/s)
            </summary>
        </member>
        <member name="P:MMALSharp.Components.MMALVideoEncoder.Quality">
            <summary>
            Quality of the encoder output. Valid property for both H264 and MJPEG encoders.
            H264 encoding - High: 10 Low: 40 Average: 20-25.
            MJPEG encoding - Uses same quality scale as JPEG encoder (Lowest: 1  Highest: 100).
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALVideoEncoder.#ctor">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Components.MMALVideoEncoder"/>.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALVideoEncoder.ConfigureOutputPort(System.Int32,MMALSharp.Ports.IMMALPortConfig,MMALSharp.Handlers.IOutputCaptureHandler)">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.Components.MMALVideoEncoder.RequestIFrame">
            <summary>
            Request a new IFrame to be generated from the video encoder. Only applies to H.264 encoding. 
            </summary>
        </member>
        <member name="T:MMALSharp.Components.VideoLevel">
            <summary>
            A class to describe a H.264 level mode.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.VideoLevel.Level">
            <summary>
            The MMAL level enum.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.VideoLevel.MacroblocksPerSecLimit">
            <summary>
            The max macroblocks per second limit for this level.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.VideoLevel.MacroblocksLimit">
            <summary>
            The max macroblocks limit for this level.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.VideoLevel.Maxbitrate">
            <summary>
            The max bitrate for this level.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.VideoLevel.#ctor(MMALSharp.Native.MMALParametersVideo.MMAL_VIDEO_LEVEL_T,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Components.VideoLevel"/>.
            </summary>
            <param name="level">The MMAL level enum.</param>
            <param name="mcbps">The max macroblocks per second value.</param>
            <param name="mcb">The max macroblocks value.</param>
            <param name="bitrate">The max bitrate value.</param>
        </member>
        <member name="T:MMALSharp.Components.ICameraComponent">
            <summary>
            Represents a camera component.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.ICameraComponent.PreviewPort">
            <summary>
            The camera's preview port.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.ICameraComponent.VideoPort">
            <summary>
            The camera's video port.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.ICameraComponent.StillPort">
            <summary>
            The camera's still port.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.ICameraComponent.CameraInfo">
            <summary>
            The managed camera info component object.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.ICameraComponent.Initialise(MMALSharp.Handlers.IOutputCaptureHandler,MMALSharp.Handlers.IOutputCaptureHandler)">
            <summary>
            Call to initialise the camera component.
            </summary>
            <param name="stillCaptureHandler">A capture handler when capturing raw image frames from the camera's still port (no encoder attached).</param>
            <param name="videoCaptureHandler">A capture handler when capturing raw video from the camera's video port (no encoder attached).</param>
        </member>
        <member name="T:MMALSharp.Components.ICameraInfoComponent">
            <summary>
            Represents a camera info component.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.ICameraInfoComponent.SensorName">
            <summary>
            The camera sensor name.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.ICameraInfoComponent.MaxWidth">
            <summary>
            The camera's max operating width.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.ICameraInfoComponent.MaxHeight">
            <summary>
            The camera's max operating height.
            </summary>
        </member>
        <member name="T:MMALSharp.Components.IComponent">
            <summary>
            Represents a component.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.IComponent.Control">
            <summary>
            The component's control port.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.IComponent.Inputs">
            <summary>
            The list of input ports.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.IComponent.Outputs">
            <summary>
            The list of output ports.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.IComponent.Clocks">
            <summary>
            The list of clock ports.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.IComponent.Ports">
            <summary>
            The list of all ports.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.IComponent.Name">
            <summary>
            The name of the component.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.IComponent.Enabled">
            <summary>
            Flag whether this component is enabled.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.IComponent.ForceStopProcessing">
            <summary>
            Flag to force the component to stop processing.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.IComponent.EnableConnections">
            <summary>
            Call to enable connections.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.IComponent.DisableConnections">
            <summary>
            Call to disable connections.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.IComponent.PrintComponent">
            <summary>
            Call to print metadata for this component.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.IComponent.AcquireComponent">
            <summary>
            Acquire a reference on a component. Acquiring a reference on a component will prevent a component from being destroyed until the 
            acquired reference is released (by a call to mmal_component_destroy). References are internally counted so all acquired references 
            need a matching call to release them.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.IComponent.ReleaseComponent">
            <summary>
            Release a reference on a component Release an acquired reference on a component. Triggers the destruction of the component 
            when the last reference is being released.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.IComponent.DestroyComponent">
            <summary>
            Destroy a previously created component Release an acquired reference on a component. 
            Only actually destroys the component when the last reference is being released.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.IComponent.EnableComponent">
            <summary>
            Enable processing on a component.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.IComponent.DisableComponent">
            <summary>
            Disable processing on a component.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.IComponent.CleanPortPools">
            <summary>
            Helper method to destroy any port pools still in action. Failure to do this will cause MMAL to block indefinitely.
            </summary>
        </member>
        <member name="T:MMALSharp.Components.IDownstreamComponent">
            <summary>
            Represents a downstream component, i.e. a component that can be connected to.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.IDownstreamComponent.ProcessingPorts">
            <summary>
            The ports which are processing data on this component.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.IDownstreamComponent.ConfigureInputPort(MMALSharp.Ports.IMMALPortConfig,MMALSharp.Ports.IPort,MMALSharp.Handlers.IInputCaptureHandler)">
            <summary>
            Configures the input port.
            </summary>
            <param name="config">The port configuration object.</param>
            <param name="copyPort">The port to copy from.</param>
            <param name="handler">The capture handler to use with this port.</param>
            <returns>This component.</returns>
        </member>
        <member name="M:MMALSharp.Components.IDownstreamComponent.ConfigureInputPort(MMALSharp.Ports.IMMALPortConfig,MMALSharp.Handlers.IInputCaptureHandler)">
            <summary>
            Call to configure changes on a downstream component input port.
            </summary>
            <param name="config">User provided port configuration object.</param>
            <param name="handler">The input port capture handler. This will be non-null if this port's component is the 1st component in the 
            pipeline and you are feeding data to it directly from a <see cref="T:MMALSharp.Handlers.IInputCaptureHandler"/>. If this port is connected to by another component then leave this parameter null.
            </param>
            <returns>This <see cref="T:MMALSharp.Components.MMALDownstreamComponent"/>.</returns>
        </member>
        <member name="M:MMALSharp.Components.IDownstreamComponent.ConfigureInputPort``1(MMALSharp.Ports.IMMALPortConfig,MMALSharp.Handlers.IInputCaptureHandler)">
            <summary>
            Configures the input port. In addition, it will create a new instance of the port
            in the generic constraint and assign it to the component.
            </summary>
            <typeparam name="TPort">The input port constraint.</typeparam>
            <param name="config">The port configuration object.</param>
            <param name="handler">The input port capture handler. This will be non-null if this port's component is the 1st component in the 
            pipeline and you are feeding data to it directly from a <see cref="T:MMALSharp.Handlers.IInputCaptureHandler"/>. If this port is connected to by another component then leave this parameter null.
            </param>
            <returns>This component.</returns>
        </member>
        <member name="M:MMALSharp.Components.IDownstreamComponent.ConfigureOutputPort(MMALSharp.Ports.IMMALPortConfig,MMALSharp.Handlers.IOutputCaptureHandler)">
            <summary>
            Configures the output port.
            </summary>
            <param name="config">The port configuration object.</param>
            <param name="handler">The output port capture handler.</param>
            <returns>This component.</returns>
        </member>
        <member name="M:MMALSharp.Components.IDownstreamComponent.ConfigureOutputPort(System.Int32,MMALSharp.Ports.IMMALPortConfig,MMALSharp.Handlers.IOutputCaptureHandler)">
            <summary>
            Configures the output port.
            </summary>
            <param name="outputPort">The output port number.</param>
            <param name="config">The port configuration object.</param>
            <param name="handler">The capture handler to use with this port.</param>
            <returns>This component.</returns>
        </member>
        <member name="M:MMALSharp.Components.IDownstreamComponent.ConfigureOutputPort``1(System.Int32,MMALSharp.Ports.IMMALPortConfig,MMALSharp.Handlers.IOutputCaptureHandler)">
            <summary>
            Configures the output port. In addition, it will create a new instance of the port
            in the generic constraint and assign it to the component.
            </summary>
            <typeparam name="TPort">The output port constraint.</typeparam>
            <param name="outputPort">The output port number.</param>
            <param name="config">The port configuration object.</param>
            <param name="handler">The capture handler to use with this port.</param>
            <returns>This component.</returns>
        </member>
        <member name="T:MMALSharp.Components.IDownstreamHandlerComponent">
            <summary>
            Represents a downstream handler component.
            </summary>
        </member>
        <member name="T:MMALSharp.Components.MMALSensorMode">
            <summary>
            Defines a set of sensor modes that allow to configure how the raw image data is sent to the GPU before further processing. See wiki on GitHub for more information.
            </summary>
            <remarks>
            https://github.com/techyian/MMALSharp/wiki/OmniVision-OV5647-Camera-Module
            https://github.com/techyian/MMALSharp/wiki/Sony-IMX219-Camera-Module
            https://www.raspberrypi.org/forums/viewtopic.php?t=85714
            </remarks>
        </member>
        <member name="F:MMALSharp.Components.MMALSensorMode.Mode0">
            <summary>
            Automatic mode (default).
            </summary>
        </member>
        <member name="F:MMALSharp.Components.MMALSensorMode.Mode1">
            <summary>
            1080p cropped mode.
            </summary>
        </member>
        <member name="F:MMALSharp.Components.MMALSensorMode.Mode2">
            <summary>
            4:3 ratio.
            </summary>
        </member>
        <member name="F:MMALSharp.Components.MMALSensorMode.Mode3">
            <summary>
            4:3 ratio (low FPS with OV5647).
            </summary>
        </member>
        <member name="F:MMALSharp.Components.MMALSensorMode.Mode4">
            <summary>
            2x2 binned 4:3.
            </summary>
        </member>
        <member name="F:MMALSharp.Components.MMALSensorMode.Mode5">
            <summary>
            2x2 binned 16:9.
            </summary>
        </member>
        <member name="F:MMALSharp.Components.MMALSensorMode.Mode6">
            <summary>
            High FPS. Ratio and resolution depend on camera module.
            </summary>
        </member>
        <member name="F:MMALSharp.Components.MMALSensorMode.Mode7">
            <summary>
            VGA high FPS.
            </summary>
        </member>
        <member name="T:MMALSharp.Components.MMALCameraComponent">
            <summary>
            Represents a camera component.
            </summary>
        </member>
        <member name="F:MMALSharp.Components.MMALCameraComponent.MMALCameraPreviewPort">
            <summary>
            The output port number of the camera's preview port.
            </summary>
        </member>
        <member name="F:MMALSharp.Components.MMALCameraComponent.MMALCameraVideoPort">
            <summary>
            The output port number of the camera's video port.
            </summary>
        </member>
        <member name="F:MMALSharp.Components.MMALCameraComponent.MMALCameraStillPort">
            <summary>
            The output port number of the camera's still port.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.MMALCameraComponent.PreviewPort">
            <summary>
            Managed reference to the Preview port of the camera.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.MMALCameraComponent.VideoPort">
            <summary>
            Managed reference to the Video port of the camera.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.MMALCameraComponent.StillPort">
            <summary>
            Managed reference to the Still port of the camera.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.MMALCameraComponent.CameraInfo">
            <summary>
            Camera Info component. This is used to provide detailed info about the camera itself.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALCameraComponent.#ctor">
            <summary>
            Initialises a new MMALCameraComponent.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALCameraComponent.Dispose">
            <summary>
            Disposes of the current component, and frees any native resources still in use by it.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALCameraComponent.PrintComponent">
            <summary>
            Prints a summary of the ports and the resolution associated with this component to the console.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALCameraComponent.Initialise(MMALSharp.Handlers.IOutputCaptureHandler,MMALSharp.Handlers.IOutputCaptureHandler)">
            <summary>
            Call to initialise the camera component.
            </summary>
            <param name="stillCaptureHandler">A capture handler when capturing raw image frames from the camera's still port (no encoder attached).</param>
            <param name="videoCaptureHandler">A capture handler when capturing raw video from the camera's video port (no encoder attached).</param>
        </member>
        <member name="M:MMALSharp.Components.MMALCameraComponent.InitialisePreview">
            <summary>
            Initialises the camera's preview component using the user defined width/height for the video port.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALCameraComponent.InitialiseVideo(MMALSharp.Handlers.IOutputCaptureHandler)">
            <summary>
            Initialises the camera's video port using the width, height and encoding as specified by the user.
            </summary>
            <param name="handler">The capture handler to associate with this port.</param>
        </member>
        <member name="M:MMALSharp.Components.MMALCameraComponent.InitialiseStill(MMALSharp.Handlers.IOutputCaptureHandler)">
            <summary>
            Initialises the camera's still port using the width, height and encoding as specified by the user.
            </summary>
            <param name="handler">The capture handler to associate with the still port.</param>
        </member>
        <member name="T:MMALSharp.Components.MMALCameraInfoComponent">
            <summary>
            Represents a Camera Info component.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.MMALCameraInfoComponent.SensorName">
            <summary>
            The sensor name of the camera.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.MMALCameraInfoComponent.MaxWidth">
            <summary>
            Maximum width supported by the sensor.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.MMALCameraInfoComponent.MaxHeight">
            <summary>
            Maximum height supported by the sensor.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALCameraInfoComponent.#ctor">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Components.MMALCameraInfoComponent"/>.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALCameraInfoComponent.PrintComponent">
            <summary>
            Prints the name of this component to the console.
            </summary>
        </member>
        <member name="T:MMALSharp.Components.MMALDownstreamComponent">
            <summary>
            Represents a downstream component. A downstream component is a component that can have data passed to it from further up the component
            hierarchy.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.MMALDownstreamComponent.ProcessingPorts">
            <summary>
            A list of working ports which are processing data in the component pipeline.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALDownstreamComponent.#ctor(System.String)">
            <summary>
            Creates a new instance of a Downstream component.
            </summary>
            <param name="name">The name of the component.</param>
        </member>
        <member name="M:MMALSharp.Components.MMALDownstreamComponent.ConfigureInputPort(MMALSharp.Ports.IMMALPortConfig,MMALSharp.Handlers.IInputCaptureHandler)">
            <summary>
            Call to configure changes on a downstream component input port.
            </summary>
            <param name="config">User provided port configuration object.</param>
            <param name="handler">The input port capture handler. This will be non-null if this port's component is the 1st component in the 
            pipeline and you are feeding data to it directly from a <see cref="T:MMALSharp.Handlers.IInputCaptureHandler"/>. If this port is connected to by another component then leave this parameter null.
            </param>
            <returns>This <see cref="T:MMALSharp.Components.MMALDownstreamComponent"/>.</returns>
        </member>
        <member name="M:MMALSharp.Components.MMALDownstreamComponent.ConfigureInputPort(MMALSharp.Ports.IMMALPortConfig,MMALSharp.Ports.IPort,MMALSharp.Handlers.IInputCaptureHandler)">
            <summary>
            Configures a specific input port on a downstream component. This method will perform a shallow copy of the output
            port it is to be connected to.
            </summary>
            <param name="config">User provided port configuration object.</param>
            <param name="copyPort">The output port we are copying format data from.</param>
            <param name="handler">The input port capture handler. This will be non-null if this port's component is the 1st component in the 
            pipeline and you are feeding data to it directly from a <see cref="T:MMALSharp.Handlers.IInputCaptureHandler"/>. If this port is connected to by another component then leave this parameter null.
            </param>
            <returns>This <see cref="T:MMALSharp.Components.MMALDownstreamComponent"/>.</returns>
        </member>
        <member name="M:MMALSharp.Components.MMALDownstreamComponent.ConfigureInputPort``1(MMALSharp.Ports.IMMALPortConfig,MMALSharp.Handlers.IInputCaptureHandler)">
            <summary>
            Call to configure changes on a downstream component input port.
            </summary>
            <typeparam name="TPort">Input port type.</typeparam>
            <param name="config">User provided port configuration object.</param>
            <param name="handler">The input port capture handler.</param>
            <returns>This <see cref="T:MMALSharp.Components.MMALDownstreamComponent"/>.</returns>
        </member>
        <member name="M:MMALSharp.Components.MMALDownstreamComponent.ConfigureOutputPort(MMALSharp.Ports.IMMALPortConfig,MMALSharp.Handlers.IOutputCaptureHandler)">
            <summary>
            Call to configure changes on the first downstream component output port.
            </summary>
            <param name="config">User provided port configuration object.</param>
            <param name="handler">The output port capture handler.</param>
            <returns>This <see cref="T:MMALSharp.Components.MMALDownstreamComponent"/>.</returns>
        </member>
        <member name="M:MMALSharp.Components.MMALDownstreamComponent.ConfigureOutputPort(System.Int32,MMALSharp.Ports.IMMALPortConfig,MMALSharp.Handlers.IOutputCaptureHandler)">
            <summary>
            Call to configure changes on a downstream component output port.
            </summary>
            <param name="outputPort">The output port number to configure.</param>
            <param name="config">User provided port configuration object.</param>
            <param name="handler">The output port capture handler.</param>
            <returns>This <see cref="T:MMALSharp.Components.MMALDownstreamComponent"/>.</returns>
        </member>
        <member name="M:MMALSharp.Components.MMALDownstreamComponent.ConfigureOutputPort``1(System.Int32,MMALSharp.Ports.IMMALPortConfig,MMALSharp.Handlers.IOutputCaptureHandler)">
            <summary>
            Call to configure changes on a downstream component output port.
            </summary>
            <typeparam name="TPort">Output port type.</typeparam>
            <param name="outputPort">The output port number to configure.</param>
            <param name="config">User provided port configuration object.</param>
            <param name="handler">The output port capture handler.</param>
            <returns>This <see cref="T:MMALSharp.Components.MMALDownstreamComponent"/>.</returns>
        </member>
        <member name="M:MMALSharp.Components.MMALDownstreamComponent.Dispose">
            <summary>
            Disposes of the current component, closes all connections and frees all associated unmanaged resources.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALDownstreamComponent.ClosePipelineConnections">
            <summary>
            Responsible for closing and destroying any connections associated with this component prior to disposing.
            </summary>
        </member>
        <member name="T:MMALSharp.Components.MMALDownstreamHandlerComponent">
            <summary>
            Base class for all downstream components which support capture handlers.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALDownstreamHandlerComponent.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Components.MMALDownstreamHandlerComponent"/>.
            </summary>
            <param name="name">The name of the component.</param>
        </member>
        <member name="T:MMALSharp.Components.MMALIspComponent">
            <summary>
            This component wraps the ISP (Image Sensor Processor) hardware block to
            offer hardware accelerated format conversion and resizing.
            It has one input port taking Bayer, YUV or RGB images in numerous different formats.
            It has two output ports:
            Port 361 supports various RGB and YUV formats.
            Port 362 is off the low res resizer which can only downscale.Due to this
            port 362 must be at a lower resolution to port 361. If set to a higher resolution
            then the port will effectively be disabled and no ouput produced.It also doesn't have
            the colour conversion block, and so only supports YUV formats.
            https://github.com/raspberrypi/firmware/blob/master/documentation/ilcomponents/isp.html 
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALIspComponent.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.Components.MMALIspComponent"/> class that can be used to change the size
            and the pixel format of resulting frames. 
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALIspComponent.#ctor(System.Type)">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.Components.MMALIspComponent"/> class that can be used to change the size
            and the pixel format of resulting frames. 
            </summary>
            <param name="outputPortType">The user defined output port type.</param>
        </member>
        <member name="T:MMALSharp.Components.MMALRendererBase">
            <summary>
            Represents a base class for all renderer components.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALRendererBase.#ctor(System.String)">
            <summary>
            Create a new instance of a renderer component.
            </summary>
            <param name="name">The name of the component.</param>
        </member>
        <member name="T:MMALSharp.Components.MMALNullSinkComponent">
            <summary>
            Represents a Null Sink component. This component should be used when a preview component is not required in order to measure exposure.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALNullSinkComponent.#ctor">
            <summary>
            Creates a new instance of a Null Sink renderer component. This component is intended to be connected to the Camera's preview port
            and is used to measure exposure. No video preview is available with this renderer.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALNullSinkComponent.PrintComponent">
            <inheritdoc />
        </member>
        <member name="T:MMALSharp.Components.MMALVideoRenderer">
            <summary>
            Represents a Video Renderer component.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.MMALVideoRenderer.Configuration">
            <summary>
            Gets the configuration for this video renderer. Call <see cref="M:MMALSharp.Components.MMALVideoRenderer.ConfigureRenderer"/> to apply changes.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.MMALVideoRenderer.Overlays">
            <summary>
            Gets a list of overlay renderers connected to this video renderer.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALVideoRenderer.#ctor">
            <summary>
            Creates a new instance of a Video renderer component. This component is intended to be connected to the Camera's preview port
            and is used to measure exposure. It also produces real-time video to the Pi's HDMI output from the camera.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALVideoRenderer.#ctor(MMALSharp.Config.PreviewConfiguration)">
            <summary>
            Creates a new instance of a Video renderer component. This component is intended to be connected to the Camera's preview port
            and is used to measure exposure. It also produces real-time video to the Pi's HDMI output from the camera.
            </summary>
            <param name="config">The configuration object for this renderer.</param>
        </member>
        <member name="M:MMALSharp.Components.MMALVideoRenderer.RemoveOverlay(MMALSharp.Components.MMALOverlayRenderer)">
            <summary>
            Removes a <see cref="T:MMALSharp.Components.MMALOverlayRenderer"/> from this renderer's overlays if it exists.
            </summary>
            <param name="renderer">The overlay renderer to remove.</param>
        </member>
        <member name="M:MMALSharp.Components.MMALVideoRenderer.ConfigureRenderer">
            <summary>
            Commits all changes made to the configuration.
            </summary>
            <exception cref="T:MMALSharp.MMALException"/>
        </member>
        <member name="M:MMALSharp.Components.MMALVideoRenderer.PrintComponent">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.Components.MMALVideoRenderer.Dispose">
            <inheritdoc />
        </member>
        <member name="T:MMALSharp.Components.MMALOverlayRenderer">
            <summary>
            MMAL provides the ability to add a static video render overlay onto the display output. The user must provide unencoded RGB input padded to the width/height of the camera block size (32x16).
            This class represents a video renderer which has the ability to overlay static resources to the display output.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.MMALOverlayRenderer.Source">
            <summary>
            A reference to the current stream being used in the overlay.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.MMALOverlayRenderer.ParentRenderer">
            <summary>
            The parent renderer which is being used to overlay onto the display.
            </summary>
        </member>
        <member name="P:MMALSharp.Components.MMALOverlayRenderer.OverlayConfiguration">
            <summary>
            The configuration for rendering a static preview overlay.
            </summary>
        </member>
        <member name="F:MMALSharp.Components.MMALOverlayRenderer.AllowedEncodings">
            <summary>
            A list of supported encodings for overlay image data.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALOverlayRenderer.#ctor(MMALSharp.Components.MMALVideoRenderer,MMALSharp.Config.PreviewOverlayConfiguration,System.Byte[])">
            <summary>
            Creates a new instance of a Overlay renderer component. This component is identical to the <see cref="T:MMALSharp.Components.MMALVideoRenderer"/> class, however it provides
            the ability to overlay a static source onto the render overlay.
            </summary>
            <param name="parent">The parent renderer which is being used to overlay onto the display.</param>
            <param name="config">The configuration for rendering a static preview overlay.</param>
            <param name="source">A reference to the current stream being used in the overlay.</param>
        </member>
        <member name="M:MMALSharp.Components.MMALOverlayRenderer.UpdateOverlay">
            <summary>
            Updates the overlay by sending <see cref="P:MMALSharp.Components.MMALOverlayRenderer.Source"/> as new image data.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALOverlayRenderer.UpdateOverlay(System.Byte[])">
            <summary>
            Updates the overlay by sending the specified buffer as new image data.
            </summary>
            <param name="imageData">Byte array containing the image data encoded like configured.</param>
        </member>
        <member name="T:MMALSharp.Components.MMALResizerComponent">
            <summary>
            Represents the resizer component. This component has the ability to change the encoding type &amp; pixel format, as well
            as the width/height of resulting frames.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALResizerComponent.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.Components.MMALResizerComponent"/> class that can be used to change the size
            and the pixel format of resulting frames. 
            </summary>
        </member>
        <member name="T:MMALSharp.Components.MMALSplitterComponent">
            <summary>
            The Splitter Component is intended on being connected to the camera video output port. In turn, it
            provides an additional 4 output ports which can be used to produce multiple image/video outputs
            from the single camera video port.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALSplitterComponent.#ctor">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Components.MMALSplitterComponent"/>.
            </summary>
        </member>
        <member name="M:MMALSharp.Components.MMALSplitterComponent.ConfigureInputPort(MMALSharp.Ports.IMMALPortConfig,MMALSharp.Ports.IPort,MMALSharp.Handlers.IInputCaptureHandler)">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.Components.MMALSplitterComponent.ConfigureInputPort(MMALSharp.Ports.IMMALPortConfig,MMALSharp.Handlers.IInputCaptureHandler)">
            <inheritdoc />
        </member>
        <member name="T:MMALSharp.MMALComponentBase">
            <summary>
            Base class for all components.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALComponentBase.Control">
            <summary>
            Reference to the Control port of this component.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALComponentBase.Inputs">
            <summary>
            Reference to all input ports associated with this component.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALComponentBase.Outputs">
            <summary>
            Reference to all output ports associated with this component.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALComponentBase.Clocks">
            <summary>
            Reference to all clock ports associated with this component.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALComponentBase.Ports">
            <summary>
            Reference to all ports associated with this component.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALComponentBase.Name">
            <summary>
            Name of the component
            </summary>
        </member>
        <member name="P:MMALSharp.MMALComponentBase.Enabled">
            <summary>
            Indicates whether this component is enabled.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALComponentBase.ForceStopProcessing">
            <summary>
            Flag to force processing to stop on this component.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALComponentBase.Ptr">
            <summary>
            Native pointer to the component this object represents.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALComponentBase.#ctor(System.String)">
            <summary>
            Creates the MMAL Component by the given name.
            </summary>
            <param name="name">The native MMAL name of the component you want to create.</param>
        </member>
        <member name="M:MMALSharp.MMALComponentBase.CheckState">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.MMALComponentBase.EnableConnections">
            <summary>
            Enables any connections associated with this component, traversing down the pipeline to enable those connections
            also.
            </summary>
            <exception cref="T:MMALSharp.MMALPortConnectedException">Thrown when port enabled prior to enabling connection.</exception>
        </member>
        <member name="M:MMALSharp.MMALComponentBase.DisableConnections">
            <summary>
            Disables any connections associated with this component, traversing down the pipeline to disable those connections
            also.
            </summary>
            <exception cref="T:MMALSharp.MMALPortConnectedException">Thrown when port still enabled prior to disabling connection.</exception>
        </member>
        <member name="M:MMALSharp.MMALComponentBase.PrintComponent">
            <summary>
            Prints a summary of the ports associated with this component to the console.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALComponentBase.Dispose">
            <summary>
            Disposes of the current component, and frees any native resources still in use by it.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALComponentBase.AcquireComponent">
            <summary>
            Acquire a reference on a component. Acquiring a reference on a component will prevent a component from being destroyed until the 
            acquired reference is released (by a call to mmal_component_destroy). References are internally counted so all acquired references 
            need a matching call to release them.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALComponentBase.ReleaseComponent">
            <summary>
            Release a reference on a component Release an acquired reference on a component. Triggers the destruction of the component 
            when the last reference is being released.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALComponentBase.DestroyComponent">
            <summary>
            Destroy a previously created component Release an acquired reference on a component. 
            Only actually destroys the component when the last reference is being released.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALComponentBase.EnableComponent">
            <summary>
            Enable processing on a component.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALComponentBase.DisableComponent">
            <summary>
            Disable processing on a component.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALComponentBase.CleanPortPools">
            <summary>
            Helper method to destroy any port pools still in action. Failure to do this will cause MMAL to block indefinitely.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALComponentBase.CreateComponent(System.String)">
            <summary>
            Provides a facility to create a component with a given name.
            </summary>
            <param name="name">The name of the component to create.</param>
            <returns>A pointer to the new component struct.</returns>
        </member>
        <member name="T:MMALSharp.Config.JustifyText">
            <summary>
            Used to indicate how text should be justified when using annotation.
            </summary>
        </member>
        <member name="F:MMALSharp.Config.JustifyText.Centre">
            <summary>
            Centre aligned.
            </summary>
        </member>
        <member name="F:MMALSharp.Config.JustifyText.Left">
            <summary>
            Left aligned.
            </summary>
        </member>
        <member name="F:MMALSharp.Config.JustifyText.Right">
            <summary>
            Right aligned.
            </summary>
        </member>
        <member name="T:MMALSharp.Config.AnnotateImage">
            <summary>
            The <see cref="T:MMALSharp.Config.AnnotateImage"/> type is for use with the image annotation functionality.
            This will produce a textual overlay on image stills depending on the options enabled.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.AnnotateImage.CustomText">
            <summary>
            Custom text to overlay on the stills capture.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.AnnotateImage.TextSize">
            <summary>
            The text size to use.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.AnnotateImage.TextColour">
            <summary>
            The <see cref="T:System.Drawing.Color"/> of the text.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.AnnotateImage.BgColour">
            <summary>
            The <see cref="T:System.Drawing.Color"/> of the background. Note: AllowCustomBackgroundColour should be enabled
            for this to work.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.AnnotateImage.ShowShutterSettings">
            <summary>
            Show shutter settings.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.AnnotateImage.ShowGainSettings">
            <summary>
            Show gain settings.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.AnnotateImage.ShowLensSettings">
            <summary>
            Show lens settings.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.AnnotateImage.ShowCafSettings">
            <summary>
            Show Continuous Auto Focus settings.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.AnnotateImage.ShowMotionSettings">
            <summary>
            Show motion settings.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.AnnotateImage.ShowFrameNumber">
            <summary>
            Show the frame number.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.AnnotateImage.AllowCustomBackgroundColour">
            <summary>
            Allows custom background colour to be used.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.AnnotateImage.ShowDateText">
            <summary>
            Show the current date.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.AnnotateImage.ShowTimeText">
            <summary>
            Show the current time.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.AnnotateImage.Justify">
            <summary>
            Justify annotation text.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.AnnotateImage.XOffset">
            <summary>
            X Offset from the justification edge.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.AnnotateImage.YOffset">
            <summary>
            Y Offset from the justification edge.
            </summary>
        </member>
        <member name="M:MMALSharp.Config.AnnotateImage.#ctor(System.String,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,MMALSharp.Config.JustifyText,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Config.AnnotateImage"/>.
            </summary>
            <param name="customText">The custom text to display.</param>
            <param name="textSize">The size of displayed text.</param>
            <param name="textColour">The colour of displayed text.</param>
            <param name="bgColour">The colour of the background.</param>
            <param name="showShutterSettings">Shows shutter settings.</param>
            <param name="showGainSettings">Shows gain settings.</param>
            <param name="showLensSettings">Show lens settings.</param>
            <param name="showCafSettings">Show CAF settings.</param>
            <param name="showMotionSettings">Show motion settings.</param>
            <param name="showFrameNumber">Show frame number.</param>
            <param name="allowCustomBackground">Enable custom background colour.</param>
            <param name="showDateText">Show date text.</param>
            <param name="showTimeText">Show time text.</param>
            <param name="justify">Justify text.</param>
            <param name="xOffset">Text X offset value.</param>
            <param name="yOffset">Text Y offset value.</param>
        </member>
        <member name="M:MMALSharp.Config.AnnotateImage.#ctor(System.String,System.Int32,System.Drawing.Color)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Config.AnnotateImage"/> with date and time enabled by default.
            </summary>
            <param name="customText">The custom text to display.</param>
            <param name="textSize">The size of displayed text.</param>
            <param name="textColour">The colour of displayed text.</param>
        </member>
        <member name="T:MMALSharp.Config.ColourEffects">
            <summary>
            Allows a user to adjust the colour of outputted frames.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.ColourEffects.Enable">
            <summary>
            Enable the Colour Effects functionality.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.ColourEffects.Color">
            <summary>
            The <see cref="P:MMALSharp.Config.ColourEffects.Color"/> to use.
            </summary>
        </member>
        <member name="M:MMALSharp.Config.ColourEffects.#ctor(System.Boolean,System.Drawing.Color)">
            <summary>
            Initialises a new <see cref="T:MMALSharp.Config.ColourEffects"/> struct.
            </summary>
            <param name="enable">Enable the Colour Effects functionality.</param>
            <param name="color">The <see cref="P:MMALSharp.Config.ColourEffects.Color"/> to use.</param>
        </member>
        <member name="T:MMALSharp.Config.ExifTag">
            <summary>
            Represents an Exif tag for use with JPEG still captures.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.ExifTag.Key">
            <summary>
            The Exif key.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.ExifTag.Value">
            <summary>
            The Exif value.
            </summary>
        </member>
        <member name="T:MMALSharp.Config.JpegThumbnail">
            <summary>
            Provides config settings for JPEG thumbnail embedding.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.JpegThumbnail.Enable">
            <summary>
            Enable JPEG thumbnail.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.JpegThumbnail.Width">
            <summary>
            The width of the thumbnail.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.JpegThumbnail.Height">
            <summary>
            The height of the thumbnail.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.JpegThumbnail.Quality">
            <summary>
            The quality of the thumbnail.
            </summary>
        </member>
        <member name="M:MMALSharp.Config.JpegThumbnail.#ctor(System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a new instance of <see cref="T:MMALSharp.Config.JpegThumbnail"/>.
            </summary>
            <param name="enable">Enable JPEG thumbnail.</param>
            <param name="width">The width of the thumbnail.</param>
            <param name="height">The height of the thumbnail.</param>
            <param name="quality">The quality of the thumbnail.</param>
        </member>
        <member name="T:MMALSharp.Config.PreviewConfiguration">
            <summary>
            Defines the settings for a <see cref="T:MMALSharp.Components.MMALVideoRenderer"/> component.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.PreviewConfiguration.FullScreen">
            <summary>
            Indicates whether to use full screen or windowed mode.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.PreviewConfiguration.NoAspect">
            <summary>
            If set to true, indicates that any display scaling should disregard the aspect ratio of the frame region being displayed.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.PreviewConfiguration.CopyProtect">
            <summary>
            Enable copy protection. 
            Note: Doesn't appear to be supported by the firmware.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.PreviewConfiguration.PreviewWindow">
            <summary>
            Specifies where the preview overlay should be drawn on the screen.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.PreviewConfiguration.Opacity">
            <summary>
            Opacity of the preview windows. Value between 1 (fully invisible) - 255 (fully opaque).
            Note: If RGBA encoding is used with the preview component then the alpha channel will be ignored.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.PreviewConfiguration.Layer">
            <summary>
            Sets the relative depth of the images, with greater values being in front of smaller values.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.PreviewConfiguration.DisplayTransform">
            <summary>
            Indicates whether any flipping or rotation should be used on the overlay.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.PreviewConfiguration.DisplayMode">
            <summary>
            Indicates how the image should be scaled to fit the display.
            </summary>
        </member>
        <member name="T:MMALSharp.Config.PreviewOverlayConfiguration">
            <summary>
            Defines the settings for a <see cref="T:MMALSharp.Components.MMALOverlayRenderer"/> component.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.PreviewOverlayConfiguration.Resolution">
            <summary>
            Specifies the resolution of the static resource to be used with this Preview Overlay. If this is null then the parent renderer's resolution will be used instead.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.PreviewOverlayConfiguration.Encoding">
            <summary>
            The encoding of the static resource. Can be one of the following: YUV, RGB, RGBA, BGR, BGRA.
            If left null, we will try to work out the encoding based on the size of the image (3 bytes for RGB, 4 bytes for RGBA).
            </summary>
        </member>
        <member name="T:MMALSharp.Config.Split">
            <summary>
            The <see cref="T:MMALSharp.Config.Split"/> type is used when taking video capture and a user wishes to split
            recording into multiple files. 
            </summary>
        </member>
        <member name="P:MMALSharp.Config.Split.Value">
            <summary>
            How often files should be split.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.Split.Mode">
            <summary>
            The <see cref="T:MMALSharp.Config.TimelapseMode"/> mode to use.
            </summary>
        </member>
        <member name="T:MMALSharp.Config.StereoMode">
            <summary>
            The Stereoscopic mode code has mainly been added for completeness.
            It requires a Raspberry Pi Compute Module with two cameras connected.
            This functionality has not been tested.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.StereoMode.Mode">
            <summary>
            Gets or sets the stereoscopic mode.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.StereoMode.Decimate">
            <summary>
            Gets or sets a value indicating whether to half the width and height of a stereoscopic image.
            </summary>
            <remarks>https://github.com/raspberrypi/userland/blob/master/host_applications/linux/apps/raspicam/RaspiCamControl.c#L204</remarks>
        </member>
        <member name="P:MMALSharp.Config.StereoMode.SwapEyes">
            <summary>
            Gets or sets a value indicating a swap of camera order for stereoscopic mode.
            </summary>
            <remarks>https://github.com/raspberrypi/userland/blob/master/host_applications/linux/apps/raspicam/RaspiCamControl.c#L205</remarks>
        </member>
        <member name="T:MMALSharp.Config.Timelapse">
            <summary>
            The <see cref="T:MMALSharp.Config.Timelapse"/> type is for use with Timelapse still captures.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.Timelapse.Mode">
            <summary>
            The timelapse mode.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.Timelapse.CancellationToken">
            <summary>
            Specifies when timelapse capture should finish.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.Timelapse.Value">
            <summary>
            How often images should be taken (relates to the <see cref="T:MMALSharp.Config.TimelapseMode"/> chosen).
            </summary>
        </member>
        <member name="T:MMALSharp.Config.TimelapseMode">
            <summary>
            The unit of time to use.
            </summary>
        </member>
        <member name="F:MMALSharp.Config.TimelapseMode.Millisecond">
            <summary>
            Uses milliseconds as unit of time. One hour equals 3'600'000 milliseconds.
            </summary>
        </member>
        <member name="F:MMALSharp.Config.TimelapseMode.Second">
            <summary>
            Uses seconds as unit of time. One hour equals 3'600 seconds.
            </summary>
        </member>
        <member name="F:MMALSharp.Config.TimelapseMode.Minute">
            <summary>
            Uses minutes as unit of time. One hour equals 60 minutes.
            </summary>
        </member>
        <member name="T:MMALSharp.Config.Zoom">
            <summary>
            Allows a user to specify a Region of Interest with Still captures.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.Zoom.X">
            <summary>
            The X coordinate between 0 - 1.0.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.Zoom.Y">
            <summary>
            The Y coordinate between 0 - 1.0.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.Zoom.Width">
            <summary>
            The Width value between 0 - 1.0.
            </summary>
        </member>
        <member name="P:MMALSharp.Config.Zoom.Height">
            <summary>
            The Height value between 0 - 1.0.
            </summary>
        </member>
        <member name="M:MMALSharp.Config.Zoom.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Intialises a new <see cref="T:MMALSharp.Config.Zoom"/> struct.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="width">The Width value.</param>
            <param name="height">The Height value.</param>
        </member>
        <member name="T:MMALSharp.MMALNativeExceptionHelper">
            <summary>
            Provides methods which support calling native methods.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALNativeExceptionHelper.MMALCheck(MMALSharp.Native.MMALUtil.MMAL_STATUS_T,System.String)">
            <summary>
            Checks whether the provided MMAL_STATUS_T is equal to MMAL_SUCCESS and throws the associated exception in case of an error.
            </summary>
            <param name="status">The MMAL_STATUS_T to search for an error.</param>
            <param name="message">The message for the exception that will be thrown if an error occurred.</param>
            <exception cref="T:MMALSharp.MMALException"/>
        </member>
        <member name="T:MMALSharp.PiCameraError">
            <summary>
            Represents unspecific errors that occur during working with the Pi Camera.
            </summary>
        </member>
        <member name="M:MMALSharp.PiCameraError.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.PiCameraError"/> exception.
            </summary>
        </member>
        <member name="M:MMALSharp.PiCameraError.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.PiCameraError"/> exception with a specified message.
            </summary>
            <param name="msg">A message that describes the current error.</param>
        </member>
        <member name="T:MMALSharp.MMALException">
            <summary>
            Base class for all native error exception wrappers.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALException.#ctor(MMALSharp.Native.MMALUtil.MMAL_STATUS_T,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.MMALException"/> class with the specified error code and message.
            This exception is the base class for all exception wrappers.
            </summary>
            <param name="status">The native status code.</param>
            <param name="message">The error message to print.</param>
        </member>
        <member name="T:MMALSharp.MMALNoMemoryException">
            <summary>
            Native error corresponding to an <see cref="T:System.OutOfMemoryException"/>.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALNoMemoryException.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.MMALNoMemoryException"/> class with the specified message.
            This exception is similar to an <see cref="T:System.OutOfMemoryException"/>.
            </summary>
            <param name="message">The error message to print.</param>
        </member>
        <member name="T:MMALSharp.MMALNoSpaceException">
            <summary>
            Native error that occurs when running out of resources other than memory.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALNoSpaceException.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.MMALNoSpaceException"/> class with the specified message.
            This exception indicates running out of resources other than memory.
            </summary>
            <param name="message">The error message to print.</param>
        </member>
        <member name="T:MMALSharp.MMALInvalidException">
            <summary>
            Native error corresponding to an <see cref="T:System.ArgumentException"/>.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALInvalidException.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.MMALInvalidException"/> class with the specified message.
            This exception is similar to an <see cref="T:System.ArgumentException"/>.
            </summary>
            <param name="message">The error message to print.</param>
        </member>
        <member name="T:MMALSharp.MMALNotImplementedException">
            <summary>
            Native error corresponding to a <see cref="T:System.NotImplementedException"/>.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALNotImplementedException.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.MMALNotImplementedException"/> class with the specified message.
            This exception is similar to a <see cref="T:System.NotImplementedException"/>.
            </summary>
            <param name="message">The error message to print.</param>
        </member>
        <member name="T:MMALSharp.MMALInvalidDirectoryException">
            <summary>
            Native error corresponding to a <see cref="T:System.IO.FileNotFoundException"/> or <see cref="T:System.IO.DirectoryNotFoundException"/>.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALInvalidDirectoryException.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.MMALInvalidDeviceException"/> class with the specified message.
            This exception is similar to a <see cref="T:System.IO.FileNotFoundException"/> or <see cref="T:System.IO.DirectoryNotFoundException"/>.
            </summary>
            <param name="message">The error message to print.</param>
        </member>
        <member name="T:MMALSharp.MMALInvalidDeviceException">
            <summary>
            Native error that occurs when a device or address does not exist.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALInvalidDeviceException.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.MMALInvalidDeviceException"/> class with the specified message.
            This exception indicates a non existent device or address.
            </summary>
            <param name="message">The error message to print.</param>
        </member>
        <member name="T:MMALSharp.MMALIOException">
            <summary>
            Native error corresponding to an <see cref="T:System.IO.IOException"/>.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALIOException.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.MMALIOException"/> class with the specified message.
            This exception is similar to an <see cref="T:System.IO.IOException"/>.
            </summary>
            <param name="message">The error message to print.</param>
        </member>
        <member name="T:MMALSharp.MMALIllegalSeekException">
            <summary>
            Native error that occurs when performing an illegal seek operation.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALIllegalSeekException.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.MMALIllegalSeekException"/> class with the specified message.
            This exception indicates an illegal seek operation.
            </summary>
            <param name="message">The error message to print.</param>
        </member>
        <member name="T:MMALSharp.MMALCorruptException">
            <summary>
            Native error that occurs when MMAL encounters corrupt data.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALCorruptException.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.MMALCorruptException"/> class with the specified message.
            This exception indicates MMAL has encountered corrupted data.
            </summary>
            <param name="message">The error message to print.</param>
        </member>
        <member name="T:MMALSharp.MMALComponentNotReadyException">
            <summary>
            Native error that occurs when a component is not ready.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALComponentNotReadyException.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.MMALComponentNotReadyException"/> class with the specified message.
            This exception indicates that a component is not ready.
            </summary>
            <param name="message">The error message to print.</param>
        </member>
        <member name="T:MMALSharp.MMALComponentNotConfiguredException">
            <summary>
            Native error that occurs when a component is not configured.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALComponentNotConfiguredException.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.MMALComponentNotConfiguredException"/> class with the specified message.
            This exception indicates a not configured component.
            </summary>
            <param name="message">The error message to print.</param>
        </member>
        <member name="T:MMALSharp.MMALPortConnectedException">
            <summary>
            Native error that occurs when a port is already connected.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALPortConnectedException.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.MMALPortNotConnectedException"/> class with the specified message.
            This exception indicates an already connected port.
            </summary>
            <param name="message">The error message to print.</param>
        </member>
        <member name="T:MMALSharp.MMALPortNotConnectedException">
            <summary>
            Native error that occurs when a port is not connected.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALPortNotConnectedException.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.MMALPortNotConnectedException"/> class with the specified message.
            This exception indicates a disconnected port.
            </summary>
            <param name="message">The error message to print.</param>
        </member>
        <member name="T:MMALSharp.MMALResourceUnavailableException">
            <summary>
            Native error that occurs when resource (e.g. a buffer) is temporarily unavailable. You should try again later.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALResourceUnavailableException.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.MMALResourceUnavailableException"/> class with the specified message.
            This exception indicates a temporiarily unavailable resource.
            </summary>
            <param name="message">The error message to print.</param>
        </member>
        <member name="T:MMALSharp.MMALBadAddressException">
            <summary>
            Native error that occurs when facing a bad address.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALBadAddressException.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:MMALSharp.MMALBadAddressException"/> class with the specified message.
            This exception indicates a bad address.
            </summary>
            <param name="message">The error message to print.</param>
        </member>
        <member name="T:MMALSharp.IBuffer">
            <summary>
            Represents a buffer header.
            </summary>
        </member>
        <member name="P:MMALSharp.IBuffer.Cmd">
            <summary>
            Defines what the buffer header contains. This is a FourCC with 0 as a special value meaning stream data.
            </summary>
        </member>
        <member name="P:MMALSharp.IBuffer.AllocSize">
            <summary>
            Allocated size in bytes of payload buffer.
            </summary>
        </member>
        <member name="P:MMALSharp.IBuffer.Length">
            <summary>
            Number of bytes currently used in the payload buffer (starting from offset).
            </summary>
        </member>
        <member name="P:MMALSharp.IBuffer.Offset">
            <summary>
            Offset in bytes to the start of valid data in the payload buffer.
            </summary>
        </member>
        <member name="P:MMALSharp.IBuffer.Flags">
            <summary>
            Flags describing properties of a buffer header.
            </summary>
        </member>
        <member name="P:MMALSharp.IBuffer.Pts">
            <summary>
            Presentation timestamp in microseconds.
            </summary>
        </member>
        <member name="P:MMALSharp.IBuffer.Dts">
            <summary>
            Decode timestamp in microseconds (dts = pts, except in the case of video streams with B frames).
            </summary>
        </member>
        <member name="P:MMALSharp.IBuffer.Type">
            <summary>
            Accessor to the specific type this buffer header represents.
            </summary>
        </member>
        <member name="P:MMALSharp.IBuffer.Properties">
            <summary>
            List of properties associated with this buffer header.
            </summary>
        </member>
        <member name="P:MMALSharp.IBuffer.Events">
            <summary>
            List of events associated with this buffer header.
            </summary>
        </member>
        <member name="P:MMALSharp.IBuffer.Ptr">
            <summary>
            Native pointer that represents this buffer header.
            </summary>
        </member>
        <member name="M:MMALSharp.IBuffer.PrintProperties">
            <summary>
            Print the properties associated with this buffer header to console.
            </summary>
        </member>
        <member name="M:MMALSharp.IBuffer.ParseEvents">
            <summary>
            Writes events associated with the buffer header to log.
            </summary>
        </member>
        <member name="M:MMALSharp.IBuffer.AssertProperty(MMALSharp.Native.MMALBufferProperties)">
            <summary>
            Checks whether a buffer header contains a certain status code.
            </summary>
            <param name="property">The status code.</param>
            <returns>True if the buffer header contains the status code.</returns>
        </member>
        <member name="M:MMALSharp.IBuffer.GetBufferData">
            <summary>
            Gathers all data in this payload and returns as a byte array.
            </summary>
            <returns>A byte array containing the image frame.</returns>
        </member>
        <member name="M:MMALSharp.IBuffer.ReadIntoBuffer(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Writes user provided image data into a buffer header.
            </summary>
            <param name="source">The array of image data to write to buffer header.</param>
            <param name="length">The length of the data being written.</param>
            <param name="eof">Signal that we've reached the end of the input file.</param>
        </member>
        <member name="M:MMALSharp.IBuffer.Acquire">
            <summary>
            Acquire a buffer header. Acquiring a buffer header increases a reference counter on it and makes 
            sure that the buffer header won't be recycled until all the references to it are gone.
            </summary>
        </member>
        <member name="M:MMALSharp.IBuffer.Release">
            <summary>
            Release a buffer header. Releasing a buffer header will decrease its reference counter and when no more references are left, 
            the buffer header will be recycled by calling its 'release' callback function.
            </summary>
        </member>
        <member name="M:MMALSharp.IBuffer.Reset">
            <summary>
            Reset a buffer header. Resets all header variables to default values.
            </summary>
        </member>
        <member name="T:MMALSharp.IBufferEvent">
            <summary>
            Represents a buffer event format.
            </summary>
        </member>
        <member name="P:MMALSharp.IBufferEvent.Ptr">
            <summary>
            Native pointer that represents this event format.
            </summary>
        </member>
        <member name="P:MMALSharp.IBufferEvent.FourCC">
            <summary>
            The FourCC code of the component.
            </summary>
        </member>
        <member name="P:MMALSharp.IBufferEvent.Bitrate">
            <summary>
            The working bitrate of the component.
            </summary>
        </member>
        <member name="P:MMALSharp.IBufferEvent.Width">
            <summary>
            The width value.
            </summary>
        </member>
        <member name="P:MMALSharp.IBufferEvent.Height">
            <summary>
            The height value.
            </summary>
        </member>
        <member name="P:MMALSharp.IBufferEvent.CropX">
            <summary>
            The CropX value.
            </summary>
        </member>
        <member name="P:MMALSharp.IBufferEvent.CropY">
            <summary>
            The CropY value.
            </summary>
        </member>
        <member name="P:MMALSharp.IBufferEvent.CropWidth">
            <summary>
            The crop width value.
            </summary>
        </member>
        <member name="P:MMALSharp.IBufferEvent.CropHeight">
            <summary>
            The crop height value.
            </summary>
        </member>
        <member name="P:MMALSharp.IBufferEvent.ParNum">
            <summary>
            The pixel aspect ratio numerator value.
            </summary>
        </member>
        <member name="P:MMALSharp.IBufferEvent.ParDen">
            <summary>
            The pixel aspect ratio denominator value.
            </summary>
        </member>
        <member name="P:MMALSharp.IBufferEvent.FramerateNum">
            <summary>
            The framerate numerator value.
            </summary>
        </member>
        <member name="P:MMALSharp.IBufferEvent.FramerateDen">
            <summary>
            The framerate denominator value.
            </summary>
        </member>
        <member name="T:MMALSharp.IBufferPool">
            <summary>
            Represents a pool of buffer headers.
            </summary>
        </member>
        <member name="P:MMALSharp.IBufferPool.Ptr">
            <summary>
            Native pointer that represents this buffer header pool.
            </summary>
        </member>
        <member name="P:MMALSharp.IBufferPool.Queue">
            <summary>
            Accessor to the queue of buffer headers this pool has.
            </summary>
        </member>
        <member name="P:MMALSharp.IBufferPool.HeadersNum">
            <summary>
            The number of buffer headers in this pool.
            </summary>
        </member>
        <member name="M:MMALSharp.IBufferPool.Resize(System.UInt32,System.UInt32)">
            <summary>
            Resize a pool of MMAL_BUFFER_HEADER_T. This allows modifying either the number of allocated buffers, the payload size or both at the same time.
            </summary>
            <param name="numHeaders">Number of headers to be contained in this pool.</param>
            <param name="size">The size of the headers.</param>
        </member>
        <member name="T:MMALSharp.IBufferQueue">
            <summary>
            Represents a queue of buffer headers.
            </summary>
        </member>
        <member name="P:MMALSharp.IBufferQueue.Ptr">
            <summary>
            Native pointer to the buffer header queue this object represents.
            </summary>
        </member>
        <member name="M:MMALSharp.IBufferQueue.GetBuffer">
            <summary>
            Get a MMAL_BUFFER_HEADER_T from a queue.
            </summary>
            <returns>A new managed buffer header object.</returns>
        </member>
        <member name="M:MMALSharp.IBufferQueue.QueueLength">
            <summary>
            Get the number of buffer headers currently in this queue.
            </summary>
            <returns>The number of buffers currently in this queue.</returns>
        </member>
        <member name="M:MMALSharp.IBufferQueue.Wait">
            <summary>
            Waits (blocking) for a buffer header to be available in the queue and allocates it.
            </summary>
            <returns>The buffer header.</returns>
        </member>
        <member name="M:MMALSharp.IBufferQueue.TimedWait(System.Int32)">
            <summary>
            Waits (blocking) for a buffer header to be available in the queue and allocates it. This is the same as a wait, except that it will abort in case of timeout.
            </summary>
            <param name="waitms">Number of milliseconds to wait before aborting.</param>
            <returns>The buffer header.</returns>
        </member>
        <member name="M:MMALSharp.IBufferQueue.Put(MMALSharp.IBuffer)">
            <summary>
            Puts the buffer header back into this queue.
            </summary>
            <param name="buffer">The buffer header.</param>
        </member>
        <member name="T:MMALSharp.IConnection">
            <summary>
            Represents a connection between two ports.
            </summary>
        </member>
        <member name="P:MMALSharp.IConnection.CallbackHandler">
            <summary>
            The connection callback handler.
            </summary>
        </member>
        <member name="P:MMALSharp.IConnection.DownstreamComponent">
            <summary>
            The downstream component associated with the connection.
            </summary>
        </member>
        <member name="P:MMALSharp.IConnection.UpstreamComponent">
            <summary>
            The upstream component associated with the connection.
            </summary>
        </member>
        <member name="P:MMALSharp.IConnection.InputPort">
            <summary>
            The input port of this connection.
            </summary>
        </member>
        <member name="P:MMALSharp.IConnection.OutputPort">
            <summary>
            The output port of this connection.
            </summary>
        </member>
        <member name="P:MMALSharp.IConnection.ConnectionPool">
            <summary>
            The pool of buffer headers in this connection.
            </summary>
        </member>
        <member name="P:MMALSharp.IConnection.Name">
            <summary>
            Name of this connection.
            </summary>
        </member>
        <member name="P:MMALSharp.IConnection.Enabled">
            <summary>
            Indicates whether this connection is enabled.
            </summary>
        </member>
        <member name="P:MMALSharp.IConnection.Flags">
            <summary>
            Flags passed during the create call (Read Only). A bitwise combination of Connection flags values.
            </summary>
        </member>
        <member name="P:MMALSharp.IConnection.TimeSetup">
            <summary>
            Time in microseconds taken to setup the connection.
            </summary>  
        </member>
        <member name="P:MMALSharp.IConnection.TimeEnable">
            <summary>
            Time in microseconds taken to enable the connection.
            </summary>
        </member>
        <member name="P:MMALSharp.IConnection.TimeDisable">
            <summary>
            Time in microseconds taken to disable the connection.
            </summary>
        </member>
        <member name="M:MMALSharp.IConnection.ManagedConnectionCallback(MMALSharp.IBuffer)">
            <summary>
            The managed connection callback method.
            </summary>
            <param name="buffer">The working buffer header.</param>
        </member>
        <member name="M:MMALSharp.IConnection.Enable">
            <summary>
            Enable a connection. The format of the two ports must have been committed before calling this function, although note that on creation, 
            the connection automatically copies and commits the output port's format to the input port.
            </summary>
        </member>
        <member name="M:MMALSharp.IConnection.Disable">
            <summary>
            Disable a connection.
            </summary>
        </member>
        <member name="M:MMALSharp.IConnection.Destroy">
            <summary>
            Destroy a connection. Release an acquired reference on a connection. Only actually destroys the connection when the last reference is 
            being released. The actual destruction of the connection will start by disabling it, if necessary. Any pool, queue, and so on owned by 
            the connection shall then be destroyed.
            </summary>
        </member>
        <member name="T:MMALSharp.IMMALObject">
            <summary>
            Represents a MMAL object.
            </summary>
        </member>
        <member name="M:MMALSharp.IMMALObject.CheckState">
            <summary>
            Checks whether a native MMAL pointer is valid.
            </summary>
            <returns>True if the pointer is valid.</returns>
        </member>
        <member name="P:MMALSharp.IMMALObject.IsDisposed">
            <summary>
            Returns whether this MMAL object has been disposed of.
            </summary>
        </member>
        <member name="T:MMALSharp.MMALBootstrapper">
            <summary>
            Used as a common class to store downstream component references between standalone mode and camera connected mode.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALBootstrapper.DownstreamComponents">
            <summary>
            List of all encoders currently in the pipeline.
            </summary>
        </member>
        <member name="T:MMALSharp.MMALBufferImpl">
            <summary>
            Represents a buffer header object.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALBufferImpl.Data">
            <summary>
            Pointer to the data associated with this buffer header.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALBufferImpl.Cmd">
            <summary>
            Defines what the buffer header contains. This is a FourCC with 0 as a special value meaning stream data.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALBufferImpl.AllocSize">
            <summary>
            Allocated size in bytes of payload buffer.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALBufferImpl.Length">
            <summary>
            Number of bytes currently used in the payload buffer (starting from offset).
            </summary>
        </member>
        <member name="P:MMALSharp.MMALBufferImpl.Offset">
            <summary>
            Offset in bytes to the start of valid data in the payload buffer.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALBufferImpl.Flags">
            <summary>
            Flags describing properties of a buffer header.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALBufferImpl.Pts">
            <summary>
            Presentation timestamp in microseconds.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALBufferImpl.Dts">
            <summary>
            Decode timestamp in microseconds (dts = pts, except in the case of video streams with B frames).
            </summary>
        </member>
        <member name="P:MMALSharp.MMALBufferImpl.Type">
            <summary>
            Accessor to the specific type this buffer header represents.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALBufferImpl.Properties">
            <summary>
            List of properties associated with this buffer header.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALBufferImpl.Events">
            <summary>
            List of events associated with this buffer header.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALBufferImpl.Ptr">
            <summary>
            Native pointer that represents this buffer header.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALBufferImpl.#ctor(MMALSharp.Native.MMAL_BUFFER_HEADER_T*)">
            <summary>
            Creates a new Managed reference to a MMAL Buffer.
            </summary>
            <param name="ptr">The native pointer to the buffer.</param>
        </member>
        <member name="M:MMALSharp.MMALBufferImpl.PrintProperties">
            <summary>
            Print the properties associated with this buffer header to console.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALBufferImpl.ParseEvents">
            <summary>
            Writes events associated with the buffer header to log.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALBufferImpl.AssertProperty(MMALSharp.Native.MMALBufferProperties)">
            <summary>
            Checks whether a buffer header contains a certain status code.
            </summary>
            <param name="property">The status code.</param>
            <returns>True if the buffer header contains the status code.</returns>
        </member>
        <member name="M:MMALSharp.MMALBufferImpl.ToString">
            <summary>
            Returns a summary, including length presentation timestamp and flags, about this buffer header instance.
            </summary>
            <returns>A string summarising this instance.</returns>
        </member>
        <member name="M:MMALSharp.MMALBufferImpl.CheckState">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.MMALBufferImpl.GetBufferData">
            <summary>
            Gathers all data in this payload and returns as a byte array.
            </summary>
            <returns>A byte array containing the image frame.</returns>
        </member>
        <member name="M:MMALSharp.MMALBufferImpl.ReadIntoBuffer(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Writes user provided image data into a buffer header.
            </summary>
            <param name="source">The array of image data to write to buffer header.</param>
            <param name="length">The length of the data being written.</param>
            <param name="eof">Signal that we've reached the end of the input file.</param>
        </member>
        <member name="M:MMALSharp.MMALBufferImpl.Acquire">
            <summary>
            Acquire a buffer header. Acquiring a buffer header increases a reference counter on it and makes 
            sure that the buffer header won't be recycled until all the references to it are gone.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALBufferImpl.Release">
            <summary>
            Release a buffer header. Releasing a buffer header will decrease its reference counter and when no more references are left, 
            the buffer header will be recycled by calling its 'release' callback function.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALBufferImpl.Reset">
            <summary>
            Reset a buffer header. Resets all header variables to default values.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALBufferImpl.InitialiseProperties">
            <summary>
            Adds all properties associated with this buffer header to <see cref="P:MMALSharp.MMALBufferImpl.Properties"/>.
            </summary>
        </member>
        <member name="T:MMALSharp.MMALCamera">
            <summary>
            This class provides an interface to the Raspberry Pi camera module. 
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCamera.Instance">
            <summary>
            Gets the singleton instance of the MMAL Camera. Call to initialise the camera for first use.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCamera.Camera">
            <summary>
            Reference to the camera component.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALCamera.StartCapture(MMALSharp.Ports.Outputs.IOutputPort)">
            <summary>
            Begin capture on one of the camera's output ports.
            </summary>
            <param name="port">An output port of the camera component.</param>
        </member>
        <member name="M:MMALSharp.MMALCamera.StopCapture(MMALSharp.Ports.Outputs.IOutputPort)">
            <summary>
            Stop capture on one of the camera's output ports.
            </summary>
            <param name="port">An output port of the camera component.</param>
        </member>
        <member name="M:MMALSharp.MMALCamera.ForceStop(MMALSharp.Ports.Outputs.IOutputPort)">
            <summary>
            Force capture to stop on a port (Still or Video).
            </summary>
            <param name="port">The capture port.</param>
        </member>
        <member name="M:MMALSharp.MMALCamera.TakeRawVideo(MMALSharp.Handlers.IVideoCaptureHandler,System.Threading.CancellationToken)">
            <summary>
            Self-contained method for recording raw video frames directly from the camera's video port.
            Uses the encoding and pixel format as set in <see cref="P:MMALSharp.MMALCameraConfig.VideoEncoding"/> and <see cref="P:MMALSharp.MMALCameraConfig.VideoSubformat"/>.
            </summary>
            <param name="handler">The video capture handler to apply to the encoder.</param>
            <param name="cancellationToken">A cancellationToken to signal when to stop video capture.</param>        
            <returns>The awaitable Task.</returns>
        </member>
        <member name="M:MMALSharp.MMALCamera.TakeVideo(MMALSharp.Handlers.IVideoCaptureHandler,System.Threading.CancellationToken,MMALSharp.Config.Split)">
            <summary>
            Self-contained method for recording H.264 video for a specified amount of time. Records at 30fps, 25Mb/s at the highest quality.
            </summary>
            <param name="handler">The video capture handler to apply to the encoder.</param>
            <param name="cancellationToken">A cancellationToken to signal when to stop video capture.</param>
            <param name="split">Used for Segmented video mode.</param>
            <returns>The awaitable Task.</returns>
        </member>
        <member name="M:MMALSharp.MMALCamera.TakeRawPicture(MMALSharp.Handlers.IOutputCaptureHandler)">
            <summary>
            Self-contained method to capture raw image data directly from the Camera component - this method does not use an Image encoder.
            Note: We cannot use the OPAQUE encoding format with this helper method, the capture will not fail, but will not produce valid data. For reference, RaspiStillYUV uses YUV420.
            </summary>
            <param name="handler">The image capture handler to use to save image.</param>
            <returns>The awaitable Task.</returns>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:MMALSharp.PiCameraError"/>
        </member>
        <member name="M:MMALSharp.MMALCamera.TakePicture(MMALSharp.Handlers.IOutputCaptureHandler,MMALSharp.Common.MMALEncoding,MMALSharp.Common.MMALEncoding)">
            <summary>
            Self-contained method for capturing a single image from the camera still port.
            An MMALImageEncoder component will be created and attached to the still port.
            </summary>
            <param name="handler">The image capture handler to apply to the encoder component.</param>
            <param name="encodingType">The image encoding type e.g. JPEG, BMP.</param>
            <param name="pixelFormat">The pixel format to use with the encoder e.g. I420 (YUV420).</param>
            <returns>The awaitable Task.</returns>
        </member>
        <member name="M:MMALSharp.MMALCamera.TakePictureTimeout(MMALSharp.Handlers.IFileStreamCaptureHandler,MMALSharp.Common.MMALEncoding,MMALSharp.Common.MMALEncoding,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Self-contained method for capturing a continual images from the camera still port for a specified period of time.
            An MMALImageEncoder component will be created and attached to the still port.
            </summary>
            <param name="handler">The image capture handler to apply to the encoder component.</param>
            <param name="encodingType">The image encoding type e.g. JPEG, BMP.</param>
            <param name="pixelFormat">The pixel format to use with the encoder e.g. I420 (YUV420).</param>
            <param name="cancellationToken">A cancellationToken to trigger stop capturing.</param>
            <param name="burstMode">When enabled, burst mode will increase the rate at which images are taken, at the expense of quality.</param>
            <returns>The awaitable Task.</returns>
        </member>
        <member name="M:MMALSharp.MMALCamera.TakePictureTimelapse(MMALSharp.Handlers.IFileStreamCaptureHandler,MMALSharp.Common.MMALEncoding,MMALSharp.Common.MMALEncoding,MMALSharp.Config.Timelapse)">
            <summary>
            Self-contained method for capturing timelapse images.
            An MMALImageEncoder component will be created and attached to the still port.
            </summary>
            <param name="handler">The image capture handler to apply to the encoder component.</param>
            <param name="encodingType">The image encoding type e.g. JPEG, BMP.</param>
            <param name="pixelFormat">The pixel format to use with the encoder e.g. I420 (YUV420).</param>
            <param name="timelapse">A Timelapse object which specifies the timeout and rate at which images should be taken.</param>
            <returns>The awaitable Task.</returns>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:MMALSharp.MMALCamera.ProcessAsync(MMALSharp.Ports.Outputs.IOutputPort,System.Threading.CancellationToken)">
            <summary>
            Helper method to begin processing image data. Starts the Camera port and awaits until processing is complete.
            Cleans up resources upon finish.
            </summary>
            <param name="cameraPort">The camera port which image data is coming from.</param>
            <param name="cancellationToken">A CancellationToken to observe while waiting for a task to complete.</param>
            <returns>The awaitable Task.</returns>
        </member>
        <member name="M:MMALSharp.MMALCamera.PrintPipeline">
            <summary>
            Prints the currently configured component pipeline to the console window.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALCamera.DisableCamera">
            <summary>
            Disables processing on the camera component.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALCamera.EnableCamera">
            <summary>
            Enables processing on the camera component
            </summary>
        </member>
        <member name="M:MMALSharp.MMALCamera.ConfigureCameraSettings(MMALSharp.Handlers.IOutputCaptureHandler,MMALSharp.Handlers.IOutputCaptureHandler)">
            <summary>
            Initialises the camera component ready for operation. This method can also be called if you want to change
            configuration settings in <see cref="T:MMALSharp.MMALCameraConfig"/>.
            </summary>
            <param name="stillCaptureHandler">Optional output capture handler for use with raw image capture.</param>
            <param name="videoCaptureHandler">Optional output capture handler for use with raw video capture.</param>
            <returns>The camera instance.</returns>
        </member>
        <member name="M:MMALSharp.MMALCamera.EnableAnnotation">
            <summary>
            Enables the annotation feature which will produce a textual overlay on produced frames.
            </summary>
            <returns>The camera instance.</returns>
        </member>
        <member name="M:MMALSharp.MMALCamera.DisableAnnotation">
            <summary>
            Disables the annotation feature.
            </summary>
            <returns>The camera instance.</returns>
        </member>
        <member name="M:MMALSharp.MMALCamera.AddOverlay(MMALSharp.Components.MMALVideoRenderer,MMALSharp.Config.PreviewOverlayConfiguration,System.Byte[])">
            <summary>
            Creates an overlay renderer that is able to render an overlay from a static image source.
            </summary>
            <param name="parent">The parent renderer which is being used to overlay onto the display.</param>
            <param name="config">The configuration for rendering a static preview overlay.</param>
            <param name="source">A reference to the current stream being used in the overlay.</param>
            <returns>The created <see cref="T:MMALSharp.Components.MMALOverlayRenderer"/> object.</returns>
        </member>
        <member name="M:MMALSharp.MMALCamera.WithMotionDetection(MMALSharp.Handlers.IMotionCaptureHandler,MMALSharp.Processors.Motion.MotionConfig,System.Action,System.Action)">
            <summary>
            Call to enable motion detection.
            </summary>
            <param name="handler">The motion capture handler.</param>
            <param name="config">The motion configuration object.</param>
            <param name="onDetect">The callback when motion is detected.</param>
            <param name="onStopDetect">An optional callback which is called when the record duration has passed.</param>
            <returns>The camera instance.</returns>
        </member>
        <member name="M:MMALSharp.MMALCamera.Cleanup">
            <summary>
            Cleans up any unmanaged resources. It is intended for this method to be run when no more activity is to be done on the camera.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALCamera.ProcessRawAsync(MMALSharp.Ports.Outputs.IOutputPort,System.Threading.CancellationToken)">
            <summary>
            Acts as an isolated processor specifically used when capturing raw frames from the camera component.
            </summary>
            <param name="cameraPort">The camera component port (still or video).</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The awaitable task.</returns>
        </member>
        <member name="M:MMALSharp.MMALCamera.CheckPreviewComponentStatus">
            <summary>
            Helper method to check the Renderer component status. If a Renderer has not been initialized, a warning will
            be shown to the user.
            </summary>
        </member>
        <member name="T:MMALSharp.MMALCameraConfig">
            <summary>
            Provides a rich set of camera/sensor related configuration. Call <see cref="M:MMALSharp.MMALCamera.ConfigureCameraSettings(MMALSharp.Handlers.IOutputCaptureHandler,MMALSharp.Handlers.IOutputCaptureHandler)"/> to apply changes.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.Debug">
            <summary>
            Gets or sets a value indicating whether to enable verbose debug output for many operations.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.SensorMode">
            <summary>
            Manually set the camera sensor mode to force certain attributes.
            See: 
            https://github.com/techyian/MMALSharp/wiki/OmniVision-OV5647-Camera-Module
            https://github.com/techyian/MMALSharp/wiki/Sony-IMX219-Camera-Module
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.Sharpness">
            <summary>
            Configure the sharpness of the image.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.Contrast">
            <summary>
            Configure the contrast of the image.
            </summary>  
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.Brightness">
            <summary>
            Configure the brightness of the image.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.Saturation">
            <summary>
            Configure the saturation of the image.
            </summary>  
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.ISO">
            <summary>
            Configure the light sensitivity of the sensor.
            </summary> 
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.ExposureCompensation">
            <summary>
            Configure the exposure compensation of the camera. Doing so will produce a lighter/darker image beyond the recommended exposure.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.ExposureMode">
            <summary>
            Configure the exposure mode used by the camera. 
            </summary>  
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.ExposureMeterMode">
            <summary>
            Configure the exposure metering mode to be used by the camera. The metering mode determines how the camera measures exposure.       
            </summary> 
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.AwbMode">
            <summary>
            Configure the Auto White Balance to be used by the camera.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.ImageFx">
            <summary>
            Configure any image effects to be used by the camera       
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.ColourFx">
            <summary>
            Allows a user to change the colour of an image, e.g. U = 128, V = 128 will result in a greyscale (monochrome) image.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.Rotation">
            <summary>
            Specify the rotation of the image, possible values are 0, 90, 180, 270.
            </summary>   
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.Flips">
            <summary>
            Specify whether the image should be flipped.
            </summary>                       
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.ROI">
            <summary>
            Zoom in on an image to focus on a region of interest.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.ShutterSpeed">
            <summary>
            Changing the shutter speed alters how long the sensor is exposed to light (in microseconds).
            <para />
            There's currently an upper limit of approximately 6.000.000µs (6.000ms, 6s), past which operation is undefined. 8MP Sony sensor supports 8s max shutter speed.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.AwbGainsR">
            <summary>
            Adjust auto white balance 'red' gains.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.AwbGainsB">
            <summary>
            Adjust auto white balance 'blue' gains.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.DrcLevel">
            <summary>
            Adjust dynamic range compression.
            
            DRC changes the images by increasing the range of dark areas, and decreasing the brighter areas. This can improve the image in low light areas.        
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.StatsPass">
            <summary>
            Displays the exposure, analogue and digital gains, and AWB settings used.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.Annotate">
            <summary>
            Allows fine tuning of annotation options.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.StereoMode">
            <summary>
            Adjust Stereoscopic mode - only supported with Raspberry Pi Compute module.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.SetChangeEventRequest">
            <summary>
            Enable to receive event request callbacks.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.ClockMode">
            <summary>
            Specify the Presentation timestamp (PTS) mode.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.PreviewEncoding">
            <summary>
            The encoding type to use with the Preview renderer.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.PreviewSubformat">
            <summary>
            The pixel format to use with the Preview renderer.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.VideoEncoding">
            <summary>
            The encoding type to use for Video captures.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.VideoSubformat">
            <summary>
            The pixel format to use for Video captures.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.VideoResolution">
            <summary>
            The Resolution to use for Video captures.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.VideoStabilisation">
            <summary>
            Enable video stabilisation.
            </summary> 
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.RateControl">
            <summary>
            Used to force behaviour of frame rate control.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.IntraPeriod">
            <summary>
            Specifies the number of frames after which a new I-frame is inserted in to the stream.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.VideoProfile">
            <summary>
            Represents the H.264 video profile you wish to use.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.VideoLevel">
            <summary>
            Represents the H.264 video level you wish to use.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.ImmutableInput">
            <summary>
            Requires the video encoder not to modify the input images. 
            </summary>
            <remarks>http://www.jvcref.com/files/PI/documentation/ilcomponents/prop.html#OMX_IndexParamBrcmImmutableInput</remarks>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.InlineHeaders">
            <summary>
            Force the stream to include PPS and SPS headers on every I-frame. Needed for certain 
            streaming cases e.g. Apple HLS.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.InlineMotionVectors">
            <summary>
            Enable output of motion vectors. 
            See https://www.raspberrypi.org/forums/viewtopic.php?t=85867 for use case.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.IntraRefresh">
            <summary>
            Sets the intra refresh period (GoP) rate for the recorded video.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.VideoFramerate">
            <summary>
            Specifies the frames per second to record
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.VideoColorSpace">
            <summary>
            The working video color space, specific to the camera's video port. 
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.StillEncoding">
            <summary>
            The encoding type to use for Still captures.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.StillSubFormat">
            <summary>
            The pixel format to use for Still captures. Irrelevant when not using OPAQUE encoding.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.StillResolution">
            <summary>
            The Resolution to use for Still captures.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.StillFramerate">
            <summary>
            The frame rate to use for Still captures.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALCameraConfig.StillBurstMode">
            <summary>
            Indicates whether the camera's still port should feature Burst Mode, i.e. MMAL_PARAMETER_CAMERA_BURST_CAPTURE.
            When enabled, burst mode will increase the rate at which images are taken, at the expense of quality.
            </summary>
        </member>
        <member name="T:MMALSharp.MMALCameraComponentExtensions">
            <summary>
            Provides extension methods for useful configuration against the Camera component.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetIsEnabledAnnotateSettings(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            States whether the camera control port is configured to display annotation settings.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>True if configured to display annotation settings.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetShowShutterAnnotateSettings(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            States whether the annotate feature will display shutter information.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>True if configured to display shutter information.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetShowCafAnnotateSettings(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            States whether the annotate feature will display Continuous Auto Focus information.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>True if configured to display Continuous Auto Focus information.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetShowGainAnnotateSettings(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            States whether the annotate feature will display gain information.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>True if configured to display gain information.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetShowLensAnnotateSettings(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            States whether the annotate feature will display lens information.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>True if configured to display lens information.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetShowMotionAnnotateSettings(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            States whether the annotate feature will display motion information.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>True if configured to display motion information.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetShowFrameNumberAnnotateSettings(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            States whether the annotate feature will display frame number information.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>True if configured to display frame number information.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetShowBlackBackgroundAnnotateSettings(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            States whether the annotate feature will use a black background when displaying information.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>True if configured to use a black background when displaying information.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetCustomTextAnnotateSettings(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Get the custom text (if any) that the user has requested to be displayed using the annotate feature.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The custom text specified by the user.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetTextColourAnnotateSettings(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the <see cref="T:System.Drawing.Color"/> structure that will be used to display information using the annotate feature.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The <see cref="T:System.Drawing.Color"/> structure.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetBackgroundColourAnnotateSettings(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the <see cref="T:System.Drawing.Color"/> structure that will be used as a background when displaying information using the annotate feature.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The <see cref="T:System.Drawing.Color"/> structure.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetSensorMode(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the sensor mode currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The sensor mode.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetSaturation(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the saturation value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The saturation value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetSharpness(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the sharpness value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The sharpness value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetContrast(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the contrast value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The contrast value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetBrightness(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the brightness value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The brightness value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetISO(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the ISO value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The ISO value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.SetISO(MMALSharp.Components.MMALCameraComponent,System.Int32)">
            <summary>
            Sets the ISO to the specified value. Range from 100 to 800.
            </summary>
            <param name="camera">The camera component.</param>
            <param name="iso">The ISO value.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetVideoStabilisation(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the Video Stabilisation value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The Video Stabilisation value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetExposureCompensation(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the Exposure Compensation value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The Exposure Compensation value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.SetExposureCompensation(MMALSharp.Components.MMALCameraComponent,System.Int32)">
            <summary>
            Sets the exposure compensation to the specified value. Range from -10 to 10.
            </summary>
            <param name="camera">The camera component.</param>
            <param name="expCompensation">The exposure compensation value.</param>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetExposureMode(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the Exposure Mode value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The Exposure Mode value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetExposureMeteringMode(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the Exposure Metering Mode value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The Exposure Metering Mode value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetAwbMode(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the Automatic White Balance value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The Automatic White Balance value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetExposureSpeed(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the Exposure Speed value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The Exposure Speed value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetFocusPosition(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the Focus Position value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The Focus Position value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetAnalogGain(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the Analog Gain value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The Analog Gain value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetDigitalGain(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the Digital Gain value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The Digital Gain value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetAwbRedGain(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the AWB Red Gain value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The AWB Red Gain value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetAwbBlueGain(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the AWB Blue Gain value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The AWB Blue Gain value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetImageFx(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the Image Effects value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The Image Effects value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetColourFx(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the Colour Effects value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The Colour Effects value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetRotation(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the Rotation value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The Rotation value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetFlips(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the Flips value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The Flips value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetVideoFlips(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the Flips value currently being used by the video port.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The Flips value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetStillFlips(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the Flips value currently being used by the still port.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The Flips value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetZoom(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the Zoom (Region of Interest) value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The Zoom value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.SetZoom(MMALSharp.Components.MMALCameraComponent,MMALSharp.Config.Zoom)">
            <summary>
            Sets the zoom to the specified value. Each parameter must not be greater than 1.0.
            </summary>
            <param name="camera">The camera component.</param>
            <param name="rect">The region of interest.</param>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetShutterSpeed(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the Shutter Speed value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The Shutter Speed value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetDRC(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the Dynamic Range Compression value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The Dynamic Range Compression value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetStatsPass(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets the Statistics Pass value currently being used by the camera.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>The Statistics Pass value.</returns>
        </member>
        <member name="M:MMALSharp.MMALCameraComponentExtensions.GetBurstMode(MMALSharp.Components.MMALCameraComponent)">
            <summary>
            Gets whether the camera's still port has burst mode enabled.
            </summary>
            <param name="camera">The camera component.</param>
            <returns>True if burst mode is enabled.</returns>
        </member>
        <member name="T:MMALSharp.MMALConnectionImpl">
            <summary>
            Represents a connection between two ports.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALConnectionImpl.CallbackHandler">
            <summary>
            The connection callback handler.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALConnectionImpl.ConnectionPool">
            <summary>
            The pool of buffer headers in this connection.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALConnectionImpl.DownstreamComponent">
            <summary>
            The downstream component associated with the connection.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALConnectionImpl.UpstreamComponent">
            <summary>
            The upstream component associated with the connection.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALConnectionImpl.InputPort">
            <summary>
            The input port of this connection.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALConnectionImpl.OutputPort">
            <summary>
            The output port of this connection.
            </summary>
        </member>
        <member name="F:MMALSharp.MMALConnectionImpl.ConnectionLock">
            <summary>
            Monitor lock for connection callback method.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALConnectionImpl.Name">
            <summary>
            Name of this connection.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALConnectionImpl.Enabled">
            <summary>
            Indicates whether this connection is enabled.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALConnectionImpl.Flags">
            <summary>
            Flags passed during the create call (Read Only). A bitwise combination of Connection flags values.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALConnectionImpl.TimeSetup">
            <summary>
            Time in microseconds taken to setup the connection.
            </summary>                          
        </member>
        <member name="P:MMALSharp.MMALConnectionImpl.TimeEnable">
            <summary>
            Time in microseconds taken to enable the connection.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALConnectionImpl.TimeDisable">
            <summary>
            Time in microseconds taken to disable the connection.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALConnectionImpl.Ptr">
            <summary>
            Native pointer to the connection that this object represents.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALConnectionImpl.CheckState">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.MMALConnectionImpl.#ctor(MMALSharp.Native.MMAL_CONNECTION_T*,MMALSharp.Ports.Outputs.IOutputPort,MMALSharp.Ports.Inputs.IInputPort,MMALSharp.Components.IDownstreamComponent,MMALSharp.Components.IComponent,System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.MMALConnectionImpl"/>.
            </summary>
            <param name="ptr">The native connection pointer.</param>
            <param name="output">The upstream component's output port.</param>
            <param name="input">The downstream component's input port.</param>
            <param name="inputComponent">The upstream component.</param>
            <param name="outputComponent">The downstream component.</param>
            <param name="useCallback">Configure the connection to intercept native callbacks. Note: will adversely impact performance.</param>
        </member>
        <member name="M:MMALSharp.MMALConnectionImpl.ManagedConnectionCallback(MMALSharp.IBuffer)">
            <summary>
            The managed connection callback method.
            </summary>
            <param name="buffer">The working buffer header.</param>
        </member>
        <member name="M:MMALSharp.MMALConnectionImpl.ToString">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.MMALConnectionImpl.Dispose">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.MMALConnectionImpl.Enable">
            <summary>
            Enable a connection. The format of the two ports must have been committed before calling this function, although note that on creation, 
            the connection automatically copies and commits the output port's format to the input port.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALConnectionImpl.Disable">
            <summary>
            Disable a connection.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALConnectionImpl.Destroy">
            <summary>
            Destroy a connection. Release an acquired reference on a connection. Only actually destroys the connection when the last reference is 
            being released. The actual destruction of the connection will start by disabling it, if necessary. Any pool, queue, and so on owned by 
            the connection shall then be destroyed.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALConnectionImpl.CreateConnection(MMALSharp.Ports.Outputs.IOutputPort,MMALSharp.Ports.Inputs.IInputPort,MMALSharp.Components.IDownstreamComponent,System.Boolean)">
            <summary>
            Facility to create a connection between two port objects.
            </summary>
            <param name="output">The output port of the connection.</param>
            <param name="input">The input port of the connection.</param>
            <param name="inputComponent">The managed instance of the component we are connecting to.</param>
            <param name="useCallback">When set to true, enable the connection callback delegate (adversely affects performance).</param>
            <returns>A new managed connection object.</returns>
        </member>
        <member name="M:MMALSharp.MMALConnectionImpl.NativeConnectionCallback(MMALSharp.Native.MMAL_CONNECTION_T*)">
            <summary>
            Represents the native callback method for a connection between two ports.
            </summary>
            <param name="connection">The native pointer to a MMAL_CONNECTION_T struct.</param>
            <returns>The value of all flags set against this connection.</returns>
        </member>
        <member name="T:MMALSharp.MMALEventFormat">
            <summary>
            Represents an MMAL Event Format.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALEventFormat.Ptr">
            <summary>
            Native pointer that represents this event format.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALEventFormat.FourCC">
            <summary>
            The FourCC code.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALEventFormat.Bitrate">
            <summary>
            The working bitrate.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALEventFormat.Width">
            <summary>
            The width value.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALEventFormat.Height">
            <summary>
            The height value.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALEventFormat.CropX">
            <summary>
            The CropX value.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALEventFormat.CropY">
            <summary>
            The CropY value.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALEventFormat.CropWidth">
            <summary>
            The crop width value.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALEventFormat.CropHeight">
            <summary>
            The crop height value.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALEventFormat.ParNum">
            <summary>
            The pixel aspect ratio numerator value.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALEventFormat.ParDen">
            <summary>
            The pixel aspect ratio denominator value.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALEventFormat.FramerateNum">
            <summary>
            The framerate numerator value.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALEventFormat.FramerateDen">
            <summary>
            The framerate denominator value.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALEventFormat.#ctor(MMALSharp.Native.MMAL_ES_FORMAT_T)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.MMALEventFormat"/>.
            </summary>
            <param name="format">The native struct.</param>
        </member>
        <member name="M:MMALSharp.MMALEventFormat.#ctor(MMALSharp.Native.MMAL_ES_FORMAT_T,MMALSharp.Native.MMAL_ES_FORMAT_T*)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.MMALEventFormat"/>.
            </summary>
            <param name="format">The native struct.</param>
            <param name="ptr">The native pointer.</param>
        </member>
        <member name="T:MMALSharp.MMALObject">
            <summary>
            This class is the base class for all MMAL components.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALObject.IsDisposed">
            <summary>
            Returns whether this MMAL object has been disposed of.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALObject.#ctor">
            <summary>
            Creates a new instance of the MMALObject class and adds this instance to the Objects list.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALObject.Dispose">
            <summary>
            Marks this object as disposed.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALObject.CheckState">
            <inheritdoc />
        </member>
        <member name="T:MMALSharp.MMALPoolImpl">
            <summary>
            Represents a pool of buffer headers. An instance of this class can be created via a MMALPortImpl.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALPoolImpl.Ptr">
            <summary>
            Native pointer that represents this buffer header pool.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALPoolImpl.Queue">
            <summary>
            Accessor to the queue of buffer headers this pool has.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALPoolImpl.HeadersNum">
            <summary>
            The number of buffer headers in this pool.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALPoolImpl.#ctor(MMALSharp.Ports.IPort)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.MMALPoolImpl"/> based on a port.
            </summary>
            <param name="port">The port.</param>
        </member>
        <member name="M:MMALSharp.MMALPoolImpl.#ctor(MMALSharp.Native.MMAL_POOL_T*)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.MMALPoolImpl"/> based on an existing <see cref="T:MMALSharp.Native.MMAL_POOL_T"/> pointer.
            </summary>
            <param name="ptr">The <see cref="T:MMALSharp.Native.MMAL_POOL_T"/> pointer.</param>
        </member>
        <member name="M:MMALSharp.MMALPoolImpl.CheckState">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.MMALPoolImpl.Resize(System.UInt32,System.UInt32)">
            <summary>
            Resize a pool of MMAL_BUFFER_HEADER_T. This allows modifying either the number of allocated buffers, the payload size or both at the same time.
            </summary>
            <param name="numHeaders">Number of headers to be contained in this pool.</param>
            <param name="size">The size of the headers.</param>
        </member>
        <member name="M:MMALSharp.MMALPoolImpl.Dispose">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.MMALPoolImpl.Destroy">
            <summary>
            Destroy a pool of MMAL_BUFFER_HEADER_T. This will also deallocate all of the memory which was allocated when creating or resizing the pool.
            </summary>
        </member>
        <member name="T:MMALSharp.MMALQueueImpl">
            <summary>
            Represents a queue of buffer headers.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALQueueImpl.Ptr">
            <summary>
            Native pointer to the buffer header queue this object represents.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALQueueImpl.#ctor(MMALSharp.Native.MMAL_QUEUE_T*)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.MMALQueueImpl"/>.
            </summary>
            <param name="ptr">The native pointer.</param>
        </member>
        <member name="M:MMALSharp.MMALQueueImpl.GetBuffer">
            <summary>
            Get a new buffer from this queue.
            </summary>
            <returns>A new managed buffer header object.</returns>
        </member>
        <member name="M:MMALSharp.MMALQueueImpl.Dispose">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.MMALQueueImpl.ToString">
            <summary>
            Returns the pointer address of this queue.
            </summary>
            <returns>The pointer address of this queue.</returns>
        </member>
        <member name="M:MMALSharp.MMALQueueImpl.CheckState">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.MMALQueueImpl.QueueLength">
            <summary>
            Get the number of buffer headers currently in this queue.
            </summary>
            <returns>The number of buffers currently in this queue.</returns>
        </member>
        <member name="M:MMALSharp.MMALQueueImpl.Wait">
            <summary>
            Waits (blocking) for a buffer header to be available in the queue and allocates it.
            </summary>
            <returns>The buffer header.</returns>
        </member>
        <member name="M:MMALSharp.MMALQueueImpl.TimedWait(System.Int32)">
            <summary>
            Waits (blocking) for a buffer header to be available in the queue and allocates it. This is the same as a wait, except that it will abort in case of timeout.
            </summary>
            <param name="waitms">Number of milliseconds to wait before aborting.</param>
            <returns>The buffer header.</returns>
        </member>
        <member name="M:MMALSharp.MMALQueueImpl.Put(MMALSharp.IBuffer)">
            <summary>
            Puts the buffer header back into this queue.
            </summary>
            <param name="buffer">The buffer header.</param>
        </member>
        <member name="M:MMALSharp.MMALQueueImpl.Destroy">
            <summary>
            Destroy a queue of MMAL_BUFFER_HEADER_T.
            </summary>
        </member>
        <member name="T:MMALSharp.MMALStandalone">
            <summary>
            Used for Standalone use of MMALSharp without camera.
            </summary>
        </member>
        <member name="P:MMALSharp.MMALStandalone.Instance">
            <summary>
            Bootstraps MMAL for standalone use.
            </summary>
        </member>
        <member name="M:MMALSharp.MMALStandalone.ProcessAsync(MMALSharp.Components.IDownstreamComponent,System.Threading.CancellationToken)">
            <summary>
            Helper method to begin processing user provided image/video data. Starts the initial component control, input and output ports and awaits until processing is complete.
            Cleans up resources upon finish.
            </summary>
            <param name="initialComponent">The first component in your pipeline.</param>
            <param name="cancellationToken">A CancellationToken to observe while waiting for a task to complete.</param>
            <returns>The awaitable Task.</returns>
        </member>
        <member name="M:MMALSharp.MMALStandalone.PrintPipeline(MMALSharp.Components.IDownstreamComponent)">
            <summary>
            Prints the currently configured component pipeline to the console window.
            </summary>
            <param name="initialComponent">The first component in your pipeline.</param>
        </member>
        <member name="M:MMALSharp.MMALStandalone.Cleanup">
            <summary>
            Cleans up any unmanaged resources. It is intended for this method to be run when no more activity is to be done with MMAL.
            </summary>
        </member>
        <member name="T:MMALSharp.Native.BcmHost">
            <summary>
            Provides interop methods for libbcm_host, the Broadcom hardware interface library.
            </summary>
        </member>
        <member name="F:MMALSharp.Native.MMALBufferProperties.MMAL_BUFFER_HEADER_FLAG_EOS">
            <summary>
            Signals that the current payload is the end of the stream of data
            </summary>
        </member>
        <member name="F:MMALSharp.Native.MMALBufferProperties.MMAL_BUFFER_HEADER_FLAG_FRAME_START">
            <summary>
            Signals that the start of the current payload starts a frame
            </summary>
        </member>
        <member name="F:MMALSharp.Native.MMALBufferProperties.MMAL_BUFFER_HEADER_FLAG_FRAME_END">
            <summary>
            Signals that the end of the current payload ends a frame
            </summary>
        </member>
        <member name="F:MMALSharp.Native.MMALBufferProperties.MMAL_BUFFER_HEADER_FLAG_FRAME">
            <summary>
            Signals that the current payload contains only complete frames (1 or more)
            </summary>
        </member>
        <member name="F:MMALSharp.Native.MMALBufferProperties.MMAL_BUFFER_HEADER_FLAG_KEYFRAME">
            <summary>
            Signals that the current payload is a keyframe (i.e. self decodable)
            </summary>
        </member>
        <member name="F:MMALSharp.Native.MMALBufferProperties.MMAL_BUFFER_HEADER_FLAG_DISCONTINUITY">
            <summary>
            Signals a discontinuity in the stream of data (e.g. after a seek). Can be used for instance by a decoder to reset its state
            </summary>
        </member>
        <member name="F:MMALSharp.Native.MMALBufferProperties.MMAL_BUFFER_HEADER_FLAG_CONFIG">
            <summary>
            Signals a buffer containing some kind of config data for the component (e.g. codec config data)
            </summary>
        </member>
        <member name="F:MMALSharp.Native.MMALBufferProperties.MMAL_BUFFER_HEADER_FLAG_ENCRYPTED">
            <summary>
            Signals an encrypted payload
            </summary>
        </member>
        <member name="F:MMALSharp.Native.MMALBufferProperties.MMAL_BUFFER_HEADER_FLAG_CODECSIDEINFO">
            <summary>
            Signals a buffer containing side information (e.g. Motion vectors).
            </summary>
        </member>
        <member name="F:MMALSharp.Native.MMALBufferProperties.MMAL_BUFFER_HEADER_FLAGS_SNAPSHOT">
            <summary>
            Signals a buffer which is the snapshot/postview image from a stills capture
            </summary>
        </member>
        <member name="F:MMALSharp.Native.MMALBufferProperties.MMAL_BUFFER_HEADER_FLAG_CORRUPTED">
            <summary>
            Signals a buffer which contains data known to be corrupted
            </summary>
        </member>
        <member name="F:MMALSharp.Native.MMALBufferProperties.MMAL_BUFFER_HEADER_FLAG_TRANSMISSION_FAILED">
            <summary>
            Signals that a buffer failed to be transmitted
            </summary>
        </member>
        <member name="F:MMALSharp.Native.MMALBufferProperties.MMAL_BUFFER_HEADER_FLAG_DECODEONLY">
            <summary>
            Signals the output buffer won't be used, just update reference frames
            </summary>
        </member>
        <member name="F:MMALSharp.Native.MMALBufferProperties.MMAL_BUFFER_HEADER_FLAG_NAL">
            <summary>
            Signals that the end of the current payload ends a NAL
            </summary>
        </member>
        <member name="F:MMALSharp.Native.MMALParametersVideo.MMAL_DISPLAYMODE_T.MMAL_DISPLAY_MODE_FILL">
            <summary>
            Fill the screen.
            </summary>
        </member>
        <member name="F:MMALSharp.Native.MMALParametersVideo.MMAL_DISPLAYMODE_T.MMAL_DISPLAY_MODE_LETTERBOX">
            <summary>
            All the source region should be displayed and black bars added if necessary.
            </summary>
        </member>
        <member name="P:MMALSharp.Native.MMALUtil.MMAL_TIME_UNKNOWN">
            <summary>
            Special Unknown Time Value
            Timestamps in MMAL are defined as signed 64 bits integer values representing microseconds.
            However a pre-defined special value is used to signal that a timestamp is not known.
            </summary>
        </member>
        <member name="T:MMALSharp.Ports.Clocks.ClockPort">
            <summary>
            Represents a clock port.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.Clocks.ClockPort.#ctor(System.IntPtr,MMALSharp.Components.IComponent,System.Guid)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Ports.Clocks.ClockPort"/>. 
            </summary>
            <param name="ptr">The native pointer.</param>
            <param name="comp">The component this port is associated with.</param>
            <param name="guid">Managed unique identifier for this component.</param>
        </member>
        <member name="T:MMALSharp.Ports.Controls.ControlPort">
            <summary>
            Represents a control port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.Controls.ControlPort.Resolution">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.Ports.Controls.ControlPort.#ctor(System.IntPtr,MMALSharp.Components.IComponent,System.Guid)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Ports.Controls.ControlPort"/>. 
            </summary>
            <param name="ptr">The native pointer.</param>
            <param name="comp">The component this port is associated with.</param>
            <param name="guid">Managed unique identifier for this component.</param>
        </member>
        <member name="M:MMALSharp.Ports.Controls.ControlPort.Enable">
            <summary>
            Enables processing on a control port.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.Controls.ControlPort.Start">
            <summary>
            Starts the control port.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.Controls.ControlPort.NativeControlPortCallback(MMALSharp.Native.MMAL_PORT_T*,MMALSharp.Native.MMAL_BUFFER_HEADER_T*)">
            <summary>
            This is the camera's control port callback function. The callback is used if
            MMALCameraConfig.SetChangeEventRequest is set to true.
            </summary>
            <param name="port">Native port struct pointer.</param>
            <param name="buffer">Native buffer header pointer.</param>
        </member>
        <member name="T:MMALSharp.Ports.Controls.IControlPort">
            <summary>
            Represents a control port.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.Controls.IControlPort.Start">
            <summary>
            Starts the control port.
            </summary>
        </member>
        <member name="T:MMALSharp.Ports.GenericPort">
            <summary>
            Represents a generic MMAL port of any type.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.GenericPort.Resolution">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.Ports.GenericPort.#ctor(System.IntPtr,MMALSharp.Components.IComponent,MMALSharp.Ports.PortType,System.Guid)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Ports.GenericPort"/>. 
            </summary>
            <param name="ptr">The native pointer.</param>
            <param name="comp">The component this port is associated with.</param>
            <param name="type">The type of port.</param>
            <param name="guid">Managed unique identifier for this component.</param>
        </member>
        <member name="P:MMALSharp.Ports.IMMALPortConfig.EncodingType">
            <summary>
            The encoding type this output port will send data in.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IMMALPortConfig.PixelFormat">
            <summary>
            The pixel format this output port will send data in.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IMMALPortConfig.Width">
            <summary>
            User provided width of output frame.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IMMALPortConfig.Height">
            <summary>
            User provided height of output frame.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IMMALPortConfig.Framerate">
            <summary>
            The framerate of the outputted data.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IMMALPortConfig.Quality">
            <summary>
            The quality of our outputted data. 
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IMMALPortConfig.Bitrate">
            <summary>
            The bitrate we are sending data at.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IMMALPortConfig.ZeroCopy">
            <summary>
            Instruct MMAL to not copy buffers to ARM memory (useful for large buffers and handling raw data).
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IMMALPortConfig.Timeout">
            <summary>
            Time that processing shall stop. Relevant for video recording.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IMMALPortConfig.BufferNum">
            <summary>
            Requested number of buffer headers.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IMMALPortConfig.BufferSize">
            <summary>
            Requested size of buffer headers.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IMMALPortConfig.Crop">
            <summary>
            The Region of Interest requested.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IMMALPortConfig.Split">
            <summary>
            Video split configuration object.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IMMALPortConfig.StoreMotionVectors">
            <summary>
            Indicates whether motion vector data should be stored to a separate output stream. Only applies to Video recording.
            </summary>
        </member>
        <member name="T:MMALSharp.Ports.Inputs.IInputPort">
            <summary>
            Represents an input port.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.Inputs.IInputPort.ConnectTo(MMALSharp.Ports.Outputs.IOutputPort,MMALSharp.IConnection)">
            <summary>
            Call to connect this input port to an output port. This method
            simply assigns the <see cref="T:MMALSharp.IConnection"/> to the ConnectedReference property. 
            </summary>
            <param name="outputPort">The connected output port.</param>
            <param name="connection">The connection object.</param>
        </member>
        <member name="M:MMALSharp.Ports.Inputs.IInputPort.Configure(MMALSharp.Ports.IMMALPortConfig,MMALSharp.Ports.IPort,MMALSharp.Handlers.IInputCaptureHandler)">
            <summary>
            Call to configure an input port.
            </summary>
            <param name="config">The port configuration object.</param>
            <param name="copyPort">The port to copy from.</param>
            <param name="handler">The capture handler to assign to this port.</param>
        </member>
        <member name="M:MMALSharp.Ports.Inputs.IInputPort.Enable">
            <summary>
            Enables processing on an input port.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.Inputs.IInputPort.ReleaseBuffer(MMALSharp.IBuffer)">
            <summary>
            Releases an input port buffer and reads further data from user provided image data if not reached end of file.
            </summary>
            <param name="bufferImpl">A managed buffer object.</param>
        </member>
        <member name="M:MMALSharp.Ports.Inputs.IInputPort.Start">
            <summary>
            Starts the input port.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.Inputs.IInputPort.RegisterCallbackHandler(MMALSharp.Callbacks.IInputCallbackHandler)">
            <summary>
            Registers a new input callback handler with this port.
            </summary>
            <param name="callbackHandler">The callback handler.</param>
        </member>
        <member name="T:MMALSharp.Ports.Inputs.InputPort">
            <summary>
            Represents an input port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.Inputs.InputPort.Resolution">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.Ports.Inputs.InputPort.#ctor(System.IntPtr,MMALSharp.Components.IComponent,System.Guid)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Ports.Inputs.InputPort"/>. 
            </summary>
            <param name="ptr">The native pointer.</param>
            <param name="comp">The component this port is associated with.</param>
            <param name="guid">Managed unique identifier for this component.</param>
        </member>
        <member name="M:MMALSharp.Ports.Inputs.InputPort.ConnectTo(MMALSharp.Ports.Outputs.IOutputPort,MMALSharp.IConnection)">
            <summary>
            Call to connect this input port to an output port. This method
            simply assigns the <see cref="T:MMALSharp.IConnection"/> to the ConnectedReference property. 
            </summary>
            <param name="outputPort">The connected output port.</param>
            <param name="connection">The connection object.</param>
        </member>
        <member name="M:MMALSharp.Ports.Inputs.InputPort.Configure(MMALSharp.Ports.IMMALPortConfig,MMALSharp.Ports.IPort,MMALSharp.Handlers.IInputCaptureHandler)">
            <summary>
            Call to configure an input port.
            </summary>
            <param name="config">The port configuration object.</param>
            <param name="copyPort">The port to copy from.</param>
            <param name="handler">The capture handler to assign to this port.</param>
        </member>
        <member name="M:MMALSharp.Ports.Inputs.InputPort.Enable">
            <summary>
            Enables processing on an input port.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.Inputs.InputPort.ReleaseBuffer(MMALSharp.IBuffer)">
            <summary>
            Releases an input port buffer and reads further data from user provided image data if not reached end of file.
            </summary>
            <param name="bufferImpl">A managed buffer object.</param>
        </member>
        <member name="M:MMALSharp.Ports.Inputs.InputPort.Start">
            <summary>
            Starts the input port.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.Inputs.InputPort.RegisterCallbackHandler(MMALSharp.Callbacks.IInputCallbackHandler)">
            <summary>
            Registers a new input callback handler with this port.
            </summary>
            <param name="callbackHandler">The callback handler.</param>
        </member>
        <member name="T:MMALSharp.Ports.Inputs.OverlayPort">
            <summary>
            Represents port behaviour especially for the static overlay renderer functionality. This object overrides <see cref="M:MMALSharp.Ports.Inputs.OverlayPort.NativeInputPortCallback(MMALSharp.Native.MMAL_PORT_T*,MMALSharp.Native.MMAL_BUFFER_HEADER_T*)"/>
            forcing it to do nothing when it receives a callback from the component.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.Inputs.OverlayPort.#ctor(System.IntPtr,MMALSharp.Components.IComponent,System.Guid)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Ports.Inputs.OverlayPort"/>. 
            </summary>
            <param name="ptr">The native pointer.</param>
            <param name="comp">The component this port is associated with.</param>
            <param name="guid">Managed unique identifier for this component.</param>
        </member>
        <member name="M:MMALSharp.Ports.Inputs.OverlayPort.#ctor(MMALSharp.Ports.IPort)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Ports.Inputs.OverlayPort"/>.
            </summary>
            <param name="copyFrom">The port to copy data from.</param>
        </member>
        <member name="T:MMALSharp.Ports.IPort">
            <summary>
            Represents a port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.Ptr">
            <summary>
            Native pointer that represents this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.PortType">
            <summary>
            Specifies the type of port this is.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.ComponentReference">
            <summary>
            Managed reference to the component this port is associated with.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.ConnectedReference">
            <summary>
            Managed reference to the downstream component this port is connected to.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.BufferPool">
            <summary>
            Managed reference to the pool of buffer headers associated with this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.Guid">
            <summary>
            User defined identifier given to this object.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.EncodingType">
            <summary>
            The MMALEncoding encoding type that this port will process data in. Helpful for retrieving encoding name/FourCC value.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.PixelFormat">
            <summary>
            The MMALEncoding pixel format that this port will process data in. Helpful for retrieving encoding name/FourCC value.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.PortConfig">
            <summary>
            The config for this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.Name">
            <summary>
            Native name of port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.Enabled">
            <summary>
            Indicates whether this port is enabled.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.BufferNumMin">
            <summary>
            Specifies minimum number of buffer headers required for this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.BufferSizeMin">
            <summary>
            Specifies minimum size of buffer headers required for this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.BufferAlignmentMin">
            <summary>
            Specifies minimum alignment value for buffer headers required for this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.BufferNumRecommended">
            <summary>
            Specifies recommended number of buffer headers for this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.BufferSizeRecommended">
            <summary>
            Specifies recommended size of buffer headers for this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.BufferNum">
            <summary>
            Indicates the currently set number of buffer headers for this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.BufferSize">
            <summary>
            Indicates the currently set size of buffer headers for this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.Format">
            <summary>
            Accessor for the elementary stream.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.Resolution">
            <summary>
            The Width/Height that this port will process data in.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.Crop">
            <summary>
            The region of interest that this port will process data in.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.FrameRate">
            <summary>
            The framerate we are processing data in.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.VideoColorSpace">
            <summary>
            The working video color space, specific to video ports.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.CropWidth">
            <summary>
            The Region of Interest width that this port will process data in.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.CropHeight">
            <summary>
            The Region of Interest height that this port will process data in.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.NativeEncodingType">
            <summary>
            The encoding type that this port will process data in.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.NativeEncodingSubformat">
            <summary>
            The pixel format that this port will process data in.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.Bitrate">
            <summary>
            The working bitrate of this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.Par">
            <summary>
            The working aspect ratio of this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.ZeroCopy">
            <summary>
            Indicates whether ZeroCopy mode should be enabled on this port. When enabled, data is not copied to the ARM processor and is handled directly by the GPU. Useful when
            transferring large amounts of data or raw capture.
            See: https://www.raspberrypi.org/forums/viewtopic.php?t=170024
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.IPort.Trigger">
            <summary>
            Asynchronous trigger which is set when processing has completed on this port.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.IPort.EnablePort(System.IntPtr)">
            <summary>
            Enables the specified port.
            </summary>
            <param name="callback">The function pointer MMAL will call back to.</param>
        </member>
        <member name="M:MMALSharp.Ports.IPort.DisablePort">
            <summary>
            Disable processing on a port. Disabling a port will stop all processing on this port and return all (non-processed)
            buffer headers to the client. If this is a connected output port, the input port to which it is connected shall also be disabled.
            Any buffer pool shall be released.
            </summary>
            <exception cref="T:MMALSharp.MMALException"/>
        </member>
        <member name="M:MMALSharp.Ports.IPort.Commit">
            <summary>
            Commit format changes on this port.
            </summary>
            <exception cref="T:MMALSharp.MMALException"/>
        </member>
        <member name="M:MMALSharp.Ports.IPort.ShallowCopy(MMALSharp.Ports.IPort)">
            <summary>
            Shallow copy a format structure. It is worth noting that the extradata buffer will not be copied in the new format.
            </summary>
            <param name="destination">The destination port we're copying to.</param>
        </member>
        <member name="M:MMALSharp.Ports.IPort.ShallowCopy(MMALSharp.IBufferEvent)">
            <summary>
            Shallow copy a format structure. It is worth noting that the extradata buffer will not be copied in the new format.
            </summary>
            <param name="eventFormatSource">The source event format we're copying from.</param>
        </member>
        <member name="M:MMALSharp.Ports.IPort.FullCopy(MMALSharp.Ports.IPort)">
            <summary>
            Fully copy a format structure, including the extradata buffer.
            </summary>
            <param name="destination">The destination port we're copying to.</param>
        </member>
        <member name="M:MMALSharp.Ports.IPort.FullCopy(MMALSharp.IBufferEvent)">
            <summary>
            Fully copy a format structure, including the extradata buffer.
            </summary>
            <param name="eventFormatSource">The source event format we're copying from.</param>
        </member>
        <member name="M:MMALSharp.Ports.IPort.Flush">
            <summary>
            Ask a port to release all the buffer headers it currently has. This is an asynchronous operation and the
            flush call will return before all the buffer headers are returned to the client.
            </summary>
            <exception cref="T:MMALSharp.MMALException"/>
        </member>
        <member name="M:MMALSharp.Ports.IPort.SendBuffer(MMALSharp.IBuffer)">
            <summary>
            Send a buffer header to a port.
            </summary>
            <param name="buffer">A managed buffer object.</param>
            <exception cref="T:MMALSharp.MMALException"/>
        </member>
        <member name="M:MMALSharp.Ports.IPort.SendAllBuffers">
            <summary>
            Attempts to send all available buffers in the queue to this port.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.IPort.SendAllBuffers(MMALSharp.IBufferPool)">
            <summary>
            Attempts to send all available buffers in the specified pool's queue to this port.
            </summary>
            <param name="pool">The specified pool.</param>
        </member>
        <member name="M:MMALSharp.Ports.IPort.DestroyPortPool">
            <summary>
            Destroy a pool of MMAL_BUFFER_HEADER_T associated with a specific port. This will also deallocate all of the memory
            which was allocated when creating or resizing the pool.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.IPort.InitialiseBufferPool">
            <summary>
            Initialises a new buffer pool.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.IPort.ExtraDataAlloc(System.Int32)">
            <summary>
            Attempts to allocate the native extradata store with the given size.
            </summary>
            <param name="size">The size to allocate.</param>
            <exception cref="T:MMALSharp.MMALException"/>
        </member>
        <member name="M:MMALSharp.Ports.IPort.CloseConnection">
            <summary>
            To be called once connection has been disposed of.
            </summary>
        </member>
        <member name="T:MMALSharp.Ports.MMALPortConfig">
            <summary>
            Port configuration class.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.MMALPortConfig.EncodingType">
            <summary>
            The encoding type this output port will send data in.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.MMALPortConfig.PixelFormat">
            <summary>
            The pixel format this output port will send data in.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.MMALPortConfig.Width">
            <summary>
            User provided width of output frame.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.MMALPortConfig.Height">
            <summary>
            User provided height of output frame.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.MMALPortConfig.Framerate">
            <summary>
            The framerate of the outputted data.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.MMALPortConfig.Quality">
            <summary>
            The quality of our outputted data. 
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.MMALPortConfig.Bitrate">
            <summary>
            The bitrate we are sending data at.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.MMALPortConfig.ZeroCopy">
            <summary>
            Instruct MMAL to not copy buffers to ARM memory (useful for large buffers and handling raw data).
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.MMALPortConfig.Timeout">
            <summary>
            Time that processing shall stop. Relevant for video recording.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.MMALPortConfig.BufferNum">
            <summary>
            Requested number of buffer headers.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.MMALPortConfig.BufferSize">
            <summary>
            Requested size of buffer headers.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.MMALPortConfig.Crop">
            <summary>
            The Region of Interest requested.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.MMALPortConfig.Split">
            <summary>
            Video split configuration object.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.MMALPortConfig.StoreMotionVectors">
            <summary>
            Indicates whether motion vector data should be stored to a separate output stream. Only applies to Video recording.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.MMALPortConfig.#ctor(MMALSharp.Common.MMALEncoding,MMALSharp.Common.MMALEncoding,System.Int32)">
            <summary>
            Create a new instance of <see cref="T:MMALSharp.Ports.MMALPortConfig"/> with parameters useful for image capture.
            </summary>
            <param name="encodingType">The encoding type.</param>
            <param name="pixelFormat">The pixel format.</param>
            <param name="quality">The output quality. Only affects JPEG quality for image stills.</param>
        </member>
        <member name="M:MMALSharp.Ports.MMALPortConfig.#ctor(MMALSharp.Common.MMALEncoding,MMALSharp.Common.MMALEncoding,System.Int32,System.Int32,System.Nullable{System.DateTime},MMALSharp.Config.Split,System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:MMALSharp.Ports.MMALPortConfig"/> with parameters useful for video capture.
            </summary>
            <param name="encodingType">The encoding type.</param>
            <param name="pixelFormat">The pixel format.</param>
            <param name="quality">The output quality. Affects the quantization parameter for H.264 encoding. Set bitrate 0 and set this for variable bitrate.</param>
            <param name="bitrate">The output bitrate.</param>
            <param name="timeout">Video record timeout. This is useful if you have multiple video recording streams which you want to stop at different times.</param>
            <param name="split">Video split configuration object.</param>
            <param name="storeMotionVectors">Indicates whether to store motion vectors. Applies to H.264 video encoding.</param>
        </member>
        <member name="M:MMALSharp.Ports.MMALPortConfig.#ctor(MMALSharp.Common.MMALEncoding,MMALSharp.Common.MMALEncoding,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Nullable{System.DateTime},System.Int32,System.Int32,System.Nullable{System.Drawing.Rectangle},System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:MMALSharp.Ports.MMALPortConfig"/> with parameters useful for standalone image/video processing.
            </summary>
            <param name="encodingType">The encoding type.</param>
            <param name="pixelFormat">The pixel format.</param>
            <param name="width">The output width.</param>
            <param name="height">The output height.</param>
            <param name="framerate">The output framerate.</param>
            <param name="quality">The output quality.</param>
            <param name="bitrate">The output bitrate.</param>
            <param name="zeroCopy">Specify zero copy.</param>
            <param name="timeout">Video record timeout.</param>
            <param name="bufferNum">Requested number of buffer headers.</param>
            <param name="bufferSize">Requested size of buffer headers.</param>
            <param name="crop">The Region of Interest requested.</param>
            <param name="storeMotionVectors">Indicates whether to store motion vectors. Applies to H.264 video encoding.</param>
        </member>
        <member name="M:MMALSharp.Ports.MMALPortConfig.#ctor(MMALSharp.Common.MMALEncoding,MMALSharp.Common.MMALEncoding,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Nullable{System.DateTime},MMALSharp.Config.Split,System.Int32,System.Int32,System.Nullable{System.Drawing.Rectangle},System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:MMALSharp.Ports.MMALPortConfig"/>.
            </summary>
            <param name="encodingType">The encoding type.</param>
            <param name="pixelFormat">The pixel format.</param>
            <param name="width">The output width.</param>
            <param name="height">The output height.</param>
            <param name="framerate">The output framerate.</param>
            <param name="quality">The output quality.</param>
            <param name="bitrate">The output bitrate.</param>
            <param name="zeroCopy">Specify zero copy.</param>
            <param name="timeout">Video record timeout.</param>
            <param name="split">Video split configuration object.</param>
            <param name="bufferNum">Requested number of buffer headers.</param>
            <param name="bufferSize">Requested size of buffer headers.</param>
            <param name="crop">The Region of Interest requested.</param>
            <param name="storeMotionVectors">Indicates whether to store motion vectors. Applies to H.264 video encoding.</param>
        </member>
        <member name="T:MMALSharp.Ports.Outputs.FastStillPort">
            <summary>
            Represents a still port used specifically when capturing rapid single image frames from the camera's video port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.Outputs.FastStillPort.Resolution">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.Ports.Outputs.FastStillPort.#ctor(System.IntPtr,MMALSharp.Components.IComponent,System.Guid)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Ports.Outputs.FastStillPort"/>. 
            </summary>
            <param name="ptr">The native pointer.</param>
            <param name="comp">The component this port is associated with.</param>
            <param name="guid">Managed unique identifier for this port.</param>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.FastStillPort.#ctor(MMALSharp.Ports.IPort)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Ports.Outputs.FastStillPort"/>.
            </summary>
            <param name="copyFrom">The port to copy data from.</param>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.FastStillPort.Configure(MMALSharp.Ports.IMMALPortConfig,MMALSharp.Ports.Inputs.IInputPort,MMALSharp.Handlers.IOutputCaptureHandler)">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.Ports.Outputs.FastStillPort.NativeOutputPortCallback(MMALSharp.Native.MMAL_PORT_T*,MMALSharp.Native.MMAL_BUFFER_HEADER_T*)">
            <summary>
            The native callback MMAL passes buffer headers to.
            </summary>
            <param name="port">The port the buffer is sent to.</param>
            <param name="buffer">The buffer header.</param>
        </member>
        <member name="T:MMALSharp.Ports.Outputs.FileEncodeOutputPort">
            <summary>
            A custom port definition used specifically when using encoder conversion functionality.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.FileEncodeOutputPort.#ctor(System.IntPtr,MMALSharp.Components.IComponent,System.Guid)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Ports.Outputs.FileEncodeOutputPort"/>. 
            </summary>
            <param name="ptr">The native pointer.</param>
            <param name="comp">The component this port is associated with.</param>
            <param name="guid">Managed unique identifier for this port.</param>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.FileEncodeOutputPort.#ctor(MMALSharp.Ports.IPort)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Ports.Outputs.FileEncodeOutputPort"/>.
            </summary>
            <param name="copyFrom">The port to copy data from.</param>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.FileEncodeOutputPort.NativeOutputPortCallback(MMALSharp.Native.MMAL_PORT_T*,MMALSharp.Native.MMAL_BUFFER_HEADER_T*)">
            <summary>
            The native callback MMAL passes buffer headers to.
            </summary>
            <param name="port">The port the buffer is sent to.</param>
            <param name="buffer">The buffer header.</param>
        </member>
        <member name="T:MMALSharp.Ports.Outputs.IOutputPort">
            <summary>
            Represents an output port.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.IOutputPort.Configure(MMALSharp.Ports.IMMALPortConfig,MMALSharp.Ports.Inputs.IInputPort,MMALSharp.Handlers.IOutputCaptureHandler)">
            <summary>
            Call to configure an output port.
            </summary>
            <param name="config">The port configuration object.</param>
            <param name="copyFrom">The port to copy from.</param>
            <param name="handler">The capture handler to assign to this port.</param>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.IOutputPort.ConnectTo(MMALSharp.Components.IDownstreamComponent,System.Int32,System.Boolean)">
            <summary>
            Connects two components together by their input and output ports.
            </summary>
            <param name="component">The component we want to connect to.</param>
            <param name="inputPort">The input port of the component we want to connect to.</param>
            <param name="useCallback">Flag to use connection callback (adversely affects performance).</param>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.IOutputPort.Start">
            <summary>
            Enable the port specified.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.IOutputPort.ReleaseBuffer(MMALSharp.IBuffer)">
            <summary>
            Release an output port buffer, get a new one from the queue and send it for processing.
            </summary>
            <param name="bufferImpl">A managed buffer object.</param>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.IOutputPort.RegisterCallbackHandler(MMALSharp.Callbacks.IOutputCallbackHandler)">
            <summary>
            Call to register a new callback handler with this port.
            </summary>
            <param name="callbackHandler">The output callback handler.</param>
        </member>
        <member name="T:MMALSharp.Ports.Outputs.IStillPort">
            <summary>
            Represents a still port.
            </summary>
        </member>
        <member name="T:MMALSharp.Ports.Outputs.IVideoPort">
            <summary>
            Represents a video port.
            </summary>
        </member>
        <member name="T:MMALSharp.Ports.Outputs.OutputPort">
            <summary>
            Represents an output port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.Outputs.OutputPort.Resolution">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.Ports.Outputs.OutputPort.#ctor(System.IntPtr,MMALSharp.Components.IComponent,System.Guid)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Ports.Outputs.OutputPort"/>. 
            </summary>
            <param name="ptr">The native pointer.</param>
            <param name="comp">The component this port is associated with.</param>
            <param name="guid">Managed unique identifier for this component.</param>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.OutputPort.Configure(MMALSharp.Ports.IMMALPortConfig,MMALSharp.Ports.Inputs.IInputPort,MMALSharp.Handlers.IOutputCaptureHandler)">
            <summary>
            Call to configure an output port.
            </summary>
            <param name="config">The port configuration object.</param>
            <param name="copyFrom">The port to copy from.</param>
            <param name="handler">The capture handler to assign to this port.</param>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.OutputPort.ConnectTo(MMALSharp.Components.IDownstreamComponent,System.Int32,System.Boolean)">
            <summary>
            Connects two components together by their input and output ports.
            </summary>
            <param name="destinationComponent">The component we want to connect to.</param>
            <param name="inputPort">The input port of the component we want to connect to.</param>
            <param name="useCallback">Flag to use connection callback (adversely affects performance).</param>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.OutputPort.ReleaseBuffer(MMALSharp.IBuffer)">
            <summary>
            Release an output port buffer, get a new one from the queue and send it for processing.
            </summary>
            <param name="bufferImpl">A managed buffer object.</param>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.OutputPort.RegisterCallbackHandler(MMALSharp.Callbacks.IOutputCallbackHandler)">
            <summary>
            Call to register a new callback handler with this port.
            </summary>
            <param name="callbackHandler">The output callback handler.</param>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.OutputPort.Enable">
            <summary>
            Enables processing on an output port.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.OutputPort.Start">
            <summary>
            Enable the port specified.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.OutputPort.NativeOutputPortCallback(MMALSharp.Native.MMAL_PORT_T*,MMALSharp.Native.MMAL_BUFFER_HEADER_T*)">
            <summary>
            The native callback MMAL passes buffer headers to.
            </summary>
            <param name="port">The port the buffer is sent to.</param>
            <param name="buffer">The buffer header.</param>
        </member>
        <member name="T:MMALSharp.Ports.Outputs.SplitterVideoPort">
            <summary>
            Represents a splitter component output port.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.SplitterVideoPort.#ctor(System.IntPtr,MMALSharp.Components.IComponent,System.Guid)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Ports.Outputs.SplitterVideoPort"/>. 
            </summary>
            <param name="ptr">The native pointer.</param>
            <param name="comp">The component this port is associated with.</param>
            <param name="guid">Managed unique identifier for this port.</param>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.SplitterVideoPort.#ctor(MMALSharp.Ports.IPort)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Ports.Outputs.SplitterVideoPort"/>.
            </summary>
            <param name="copyFrom">The port to copy data from.</param>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.SplitterVideoPort.Configure(MMALSharp.Ports.IMMALPortConfig,MMALSharp.Ports.Inputs.IInputPort,MMALSharp.Handlers.IOutputCaptureHandler)">
            <inheritdoc />
        </member>
        <member name="T:MMALSharp.Ports.Outputs.StillPort">
            <summary>
            Represents a still image encoder/decoder port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.Outputs.StillPort.Resolution">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.Ports.Outputs.StillPort.#ctor(System.IntPtr,MMALSharp.Components.IComponent,System.Guid)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Ports.Outputs.StillPort"/>. 
            </summary>
            <param name="ptr">The native pointer.</param>
            <param name="comp">The component this port is associated with.</param>
            <param name="guid">Managed unique identifier for this component.</param>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.StillPort.#ctor(MMALSharp.Ports.IPort)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Ports.Outputs.StillPort"/>.
            </summary>
            <param name="copyFrom">The port to copy data from.</param>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.StillPort.Configure(MMALSharp.Ports.IMMALPortConfig,MMALSharp.Ports.Inputs.IInputPort,MMALSharp.Handlers.IOutputCaptureHandler)">
            <inheritdoc />
        </member>
        <member name="T:MMALSharp.Ports.Outputs.VideoPort">
            <summary>
            Represents a video encode/decode port
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.Outputs.VideoPort.Resolution">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.Ports.Outputs.VideoPort.#ctor(System.IntPtr,MMALSharp.Components.IComponent,System.Guid)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Ports.Outputs.VideoPort"/>. 
            </summary>
            <param name="ptr">The native pointer.</param>
            <param name="comp">The component this port is associated with.</param>
            <param name="guid">Managed unique identifier for this port.</param>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.VideoPort.#ctor(MMALSharp.Ports.IPort)">
            <summary>
            Creates a new instance of <see cref="T:MMALSharp.Ports.Outputs.VideoPort"/>.
            </summary>
            <param name="copyFrom">The port to copy data from.</param>
        </member>
        <member name="M:MMALSharp.Ports.Outputs.VideoPort.Configure(MMALSharp.Ports.IMMALPortConfig,MMALSharp.Ports.Inputs.IInputPort,MMALSharp.Handlers.IOutputCaptureHandler)">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.Ports.Outputs.VideoPort.NativeOutputPortCallback(MMALSharp.Native.MMAL_PORT_T*,MMALSharp.Native.MMAL_BUFFER_HEADER_T*)">
            <summary>
            The native callback MMAL passes buffer headers to.
            </summary>
            <param name="port">The port the buffer is sent to.</param>
            <param name="buffer">The buffer header.</param>
        </member>
        <member name="T:MMALSharp.Ports.PortBase`1">
            <summary>
            Base class for port objects.
            </summary>
            <typeparam name="TCallback">The callback handler type.</typeparam>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.CallbackHandler">
            <summary>
            The callback handler associated with this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.PortType">
            <summary>
            Specifies the type of port this is.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.ComponentReference">
            <summary>
            Managed reference to the component this port is associated with.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.ConnectedReference">
            <summary>
            Managed reference to the downstream component this port is connected to.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.BufferPool">
            <summary>
            Managed reference to the pool of buffer headers associated with this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.Guid">
            <summary>
            User defined identifier given to this object.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.EncodingType">
            <summary>
            The MMALEncoding encoding type that this port will process data in. Helpful for retrieving encoding name/FourCC value.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.PixelFormat">
            <summary>
            The MMALEncoding pixel format that this port will process data in. Helpful for retrieving encoding name/FourCC value.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.PortConfig">
            <summary>
            The config for this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.ZeroCopy">
            <summary>
            Indicates whether ZeroCopy mode should be enabled on this port. When enabled, data is not copied to the ARM processor and is handled directly by the GPU. Useful when
            transferring large amounts of data or raw capture.
            See: https://www.raspberrypi.org/forums/viewtopic.php?t=170024
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.Trigger">
            <summary>
            Asynchronous trigger which is set when processing has completed on this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.Ptr">
            <summary>
            Native pointer that represents this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.Name">
            <summary>
            Native name of port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.Enabled">
            <summary>
            Indicates whether this port is enabled.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.BufferNumMin">
            <summary>
            Specifies minimum number of buffer headers required for this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.BufferSizeMin">
            <summary>
            Specifies minimum size of buffer headers required for this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.BufferAlignmentMin">
            <summary>
            Specifies minimum alignment value for buffer headers required for this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.BufferNumRecommended">
            <summary>
            Specifies recommended number of buffer headers for this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.BufferSizeRecommended">
            <summary>
            Specifies recommended size of buffer headers for this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.BufferNum">
            <summary>
            Indicates the currently set number of buffer headers for this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.BufferSize">
            <summary>
            Indicates the currently set size of buffer headers for this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.Format">
            <summary>
            Accessor for the elementary stream.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.Resolution">
            <summary>
            The Width/Height that this port will process data in.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.Crop">
            <summary>
            The region of interest that this port will process data in.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.FrameRate">
            <summary>
            The framerate we are processing data in.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.VideoColorSpace">
            <summary>
            The working video color space, specific to video ports.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.CropWidth">
            <summary>
            The Region of Interest width that this port will process data in.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.CropHeight">
            <summary>
            The Region of Interest height that this port will process data in.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.NativeEncodingType">
            <summary>
            The encoding type that this port will process data in.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.NativeEncodingSubformat">
            <summary>
            The pixel format that this port will process data in.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.Bitrate">
            <summary>
            The working bitrate of this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.Par">
            <summary>
            The working aspect ratio of this port.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.Comp">
            <summary>
            Native pointer that represents the component this port is associated with.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.PtrCallback">
            <summary>
            Native pointer to the native callback function.
            </summary>
        </member>
        <member name="P:MMALSharp.Ports.PortBase`1.NativeCallback">
            <summary>
            Delegate for native port callback.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.PortBase`1.CheckState">
            <inheritdoc />
        </member>
        <member name="M:MMALSharp.Ports.PortBase`1.#ctor(System.IntPtr,MMALSharp.Components.IComponent,MMALSharp.Ports.PortType,System.Guid)">
            <summary>
            Creates a new managed reference to a MMAL Component Port.
            </summary>
            <param name="ptr">The native pointer to the component port.</param>
            <param name="comp">The component this port is associated with.</param>
            <param name="type">The type of port this is.</param>
            <param name="guid">A managed unique identifier for this port.</param>
        </member>
        <member name="M:MMALSharp.Ports.PortBase`1.EnablePort(System.IntPtr)">
            <summary>
            Enables the specified port.
            </summary>
            <param name="callback">The function pointer MMAL will call back to.</param>
            <exception cref="T:MMALSharp.MMALException"/>
        </member>
        <member name="M:MMALSharp.Ports.PortBase`1.DisablePort">
            <summary>
            Disable processing on a port. Disabling a port will stop all processing on this port and return all (non-processed)
            buffer headers to the client. If this is a connected output port, the input port to which it is connected shall also be disabled.
            Any buffer pool shall be released.
            </summary>
            <exception cref="T:MMALSharp.MMALException"/>
        </member>
        <member name="M:MMALSharp.Ports.PortBase`1.Commit">
            <summary>
            Commit format changes on this port.
            </summary>
            <exception cref="T:MMALSharp.MMALException"/>
        </member>
        <member name="M:MMALSharp.Ports.PortBase`1.ShallowCopy(MMALSharp.Ports.IPort)">
            <summary>
            Shallow copy a format structure. It is worth noting that the extradata buffer will not be copied in the new format.
            </summary>
            <param name="destination">The destination port we're copying to.</param>
        </member>
        <member name="M:MMALSharp.Ports.PortBase`1.ShallowCopy(MMALSharp.IBufferEvent)">
            <summary>
            Shallow copy a format structure. It is worth noting that the extradata buffer will not be copied in the new format.
            </summary>
            <param name="eventFormatSource">The source event format we're copying from.</param>
        </member>
        <member name="M:MMALSharp.Ports.PortBase`1.FullCopy(MMALSharp.Ports.IPort)">
            <summary>
            Fully copy a format structure, including the extradata buffer.
            </summary>
            <param name="destination">The destination port we're copying to.</param>
        </member>
        <member name="M:MMALSharp.Ports.PortBase`1.FullCopy(MMALSharp.IBufferEvent)">
            <summary>
            Fully copy a format structure, including the extradata buffer.
            </summary>
            <param name="eventFormatSource">The source event format we're copying from.</param>
        </member>
        <member name="M:MMALSharp.Ports.PortBase`1.Flush">
            <summary>
            Ask a port to release all the buffer headers it currently has. This is an asynchronous operation and the
            flush call will return before all the buffer headers are returned to the client.
            </summary>
            <exception cref="T:MMALSharp.MMALException"/>
        </member>
        <member name="M:MMALSharp.Ports.PortBase`1.SendBuffer(MMALSharp.IBuffer)">
            <summary>
            Send a buffer header to a port.
            </summary>
            <param name="buffer">A managed buffer object.</param>
            <exception cref="T:MMALSharp.MMALException"/>
        </member>
        <member name="M:MMALSharp.Ports.PortBase`1.SendAllBuffers">
            <summary>
            Attempts to send all available buffers in the queue to this port.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.PortBase`1.SendAllBuffers(MMALSharp.IBufferPool)">
            <summary>
            Attempts to send all available buffers in the specified pool's queue to this port.
            </summary>
            <param name="pool">The specified pool.</param>
        </member>
        <member name="M:MMALSharp.Ports.PortBase`1.DestroyPortPool">
            <summary>
            Destroy a pool of MMAL_BUFFER_HEADER_T associated with a specific port. This will also deallocate all of the memory
            which was allocated when creating or resizing the pool.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.PortBase`1.InitialiseBufferPool">
            <summary>
            Initialises a new buffer pool.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.PortBase`1.CloseConnection">
            <summary>
            To be called once connection has been disposed of.
            </summary>
        </member>
        <member name="M:MMALSharp.Ports.PortBase`1.ExtraDataAlloc(System.Int32)">
            <summary>
            Attempts to allocate the native extradata store with the given size.
            </summary>
            <param name="size">The size to allocate.</param>
            <exception cref="T:MMALSharp.MMALException"/>
        </member>
        <member name="T:MMALSharp.Ports.PortType">
            <summary>
            Describes a port type.
            </summary>
        </member>
        <member name="F:MMALSharp.Ports.PortType.Input">
            <summary>
            An input port.
            </summary>
        </member>
        <member name="F:MMALSharp.Ports.PortType.Output">
            <summary>
            An output port.
            </summary>
        </member>
        <member name="F:MMALSharp.Ports.PortType.Clock">
            <summary>
            A clock port.
            </summary>
        </member>
        <member name="F:MMALSharp.Ports.PortType.Control">
            <summary>
            A control port.
            </summary>
        </member>
        <member name="F:MMALSharp.Ports.PortType.Generic">
            <summary>
            A generic port.
            </summary>
        </member>
        <member name="T:MMALSharp.PortExtensions">
            <summary>
            Provides extension methods to obtain and change the configuration of a port.
            </summary>
        </member>
        <member name="M:MMALSharp.PortExtensions.GetParameter(MMALSharp.Ports.IPort,System.Int32)">
            <summary>
            Provides a facility to get data from the port using the native helper functions.
            </summary>
            <param name="port">The port to get the parameter from.</param>
            <param name="key">The unique key for the parameter.</param>
            <returns>Dynamic parameter based on key parameter.</returns>
        </member>
        <member name="M:MMALSharp.PortExtensions.GetRawCapture(MMALSharp.Ports.IPort)">
            <summary>
            Gets a value indicating whether to include raw Bayer image data on this port.
            </summary>
            <param name="port">The port you are querying.</param>
            <returns>True if raw Bayer image data will be returned.</returns>
        </member>
        <member name="M:MMALSharp.PortExtensions.GetSupportedEncodings(MMALSharp.Ports.IPort)">
            <summary>
            Retrieves an array of FourCC integer codes that this port is compatible with.
            </summary>
            <param name="port">The port we are getting supported encodings for.</param>
            <returns>An array of FourCC integers.</returns>
        </member>
        <member name="M:MMALSharp.PortExtensions.GetPortType(MMALSharp.Ports.PortType)">
            <summary>
            Returns the type of port in string format.
            </summary>
            <param name="type">The port type.</param>
            <returns>A string representation of the port type.</returns>
        </member>
        <member name="M:MMALSharp.PortExtensions.SetParameter(MMALSharp.Ports.IPort,System.Int32,System.Object)">
            <summary>
            Provides a facility to set data on the port using the native helper functions.
            </summary>
            <param name="port">The port we want to set the parameter on.</param>
            <param name="key">The unique key of the parameter.</param>
            <param name="value">The value of the parameter.</param>
        </member>
        <member name="M:MMALSharp.PortExtensions.SetImageCapture(MMALSharp.Ports.IPort,System.Boolean)">
            <summary>
            Starts or stops image processing on a port.
            </summary>
            <param name="port">The port.</param>
            <param name="enable">Set true to start image capture.</param>
        </member>
        <member name="M:MMALSharp.PortExtensions.SetRawCapture(MMALSharp.Ports.IPort,System.Boolean)">
            <summary>
            Enables or disables inclusion of raw Bayer metadata on this port.
            </summary>
            <param name="port">The port.</param>
            <param name="raw">Set true to include Bayer metadata.</param>
        </member>
        <member name="M:MMALSharp.PortExtensions.GetFramerateRange(MMALSharp.Ports.IPort)">
            <summary>
            Retrieves the currently configured framerate range for a given port.
            </summary>
            <param name="port">The port.</param>
            <returns>A <see cref="T:MMALSharp.Native.MMAL_PARAMETER_FPS_RANGE_T"/> structure containing the configured framerate range.</returns>
        </member>
    </members>
</doc>
