@page
@model CameraModel
@{
    ViewData["Title"] = "Camera";
}

<div>
    <h1 class="display-4">@ViewBag.Title</h1>
    <div id="panelDiv" style="display:none">
        <fieldset>
            <legend>Camera parameters</legend>
        </fieldset>

        <div class="form-row align-items-center">
            <div class="col-auto my-1">
                <label for="cameraISO" class="mr-sm-2">ISO</label>
                <input class="form-control mr-sm-2 custom-input" id="cameraISO" type="text" placeholder="ISO" />            
            </div>
            <div class="col-auto my-1">
                <label for="cameraShutter" class="mr-sm-2">Shutter</label>
                <input class="form-control mr-sm-2 custom-input" id="cameraShutter" type="text" placeholder="Shutter" />            
            </div>            
            <div class="col-auto my-1" id="otherPanel" style="display:none">
                <div class="form-row align-items-center">
                    <div class="col-auto my-1">
                        <label for="cameraWidth" class="mr-sm-2">Width</label>
                        <input class="form-control mr-sm-2 custom-input" id="cameraWidth" type="text" placeholder="Width" />            
                    </div>
                    <div class="col-auto my-1">
                        <label for="cameraHeight" class="mr-sm-2">Height</label>
                        <input class="form-control mr-sm-2 custom-input" id="cameraHeight" type="text" placeholder="Height" />            
                    </div>
                    <div class="col-auto my-1">
                        <label for="cameraQuality" class="mr-sm-2">Quality</label>
                        <input class="form-control mr-sm-2 custom-input" id="cameraQuality" type="text" placeholder="Quality" />            
                    </div>           
                </div>
            </div>
            <div class="col-auto my-1">
                <label for="cameraOther" class="mr-sm-2"></label>
                <div class="mr-sm-2"><a id="cameraOther" class="btn btn-link mr-sm-2" onclick="javascript:if(this.innerHTML === 'Other'){$('#otherPanel').show();this.innerHTML='Hide'}else{$('#otherPanel').hide();this.innerHTML='Other';}">Other</a></div>
            </div>
            <div class="col-auto my-1">
                <label for="cameraSet" class="mr-sm-2"></label>
                <div class="mr-sm-2"><button class="btn btn-primary" id="cameraSet" type="button">Set</button></div>                
            </div> 
        </div>
        <div id="frameDiv" style="display:none">
            <p>Count: <span id="frameCount"></span></p>
            <img id="frameValue" class="img-fluid"/>
            @*<br />
            <img id="frameFile" class="img-fluid"/> *@        
        </div>
    </div>
</div>


@section Scripts
{
    <script>        
        $(document).ready(function () {            
            @*let imageTimer = new Date().getTime();
            function LoadFrameFile()
            {
                imageTimer = new Date().getTime();
                document.getElementById('frameFile').src='@Url.Content("~/api/frame/image")?'+imageTimer;
            }            
            function ReloadFrameFile()
            {
                if((new Date().getTime() - imageTimer) > 2000)
                {
                    setTimeout(() => LoadFrameFile(), 50);
                }
            }
            document.getElementById('frameFile').onload = LoadFrameFile;
            setTimeout(() => LoadFrameFile(), 50);
            setInterval(() => ReloadFrameFile(), 5000);*@
            let camera = {};
            function SetCameraParameters()
            {
                $('#cameraSet').prop('disabled', true);
                document.getElementById('cameraSet').innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span><span class="sr-only">Loading...</span>';
                if(document.getElementById('cameraWidth').value != '')
                {
                    camera.width = parseInt(document.getElementById('cameraWidth').value);
                }
                if(document.getElementById('cameraHeight').value != '')
                {
                    camera.height = parseInt(document.getElementById('cameraHeight').value);
                }
                if(document.getElementById('cameraISO').value != '')
                {
                    camera.iso = parseInt(document.getElementById('cameraISO').value);
                }
                if(document.getElementById('cameraShutter').value != '')
                {
                    camera.shutter = parseInt(document.getElementById('cameraShutter').value);
                }
                if(document.getElementById('cameraQuality').value != '')
                {
                    camera.quality = parseInt(document.getElementById('cameraQuality').value);
                }
                $.ajax({
                    type: 'PUT',
                    url: '/api/camera/'+camera.id,
                    data: JSON.stringify(camera),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    headers: { RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()},
                    success: function (response) {
                        document.getElementById('cameraSet').innerHTML = 'Set';
                        $('#cameraSet').prop('disabled', false);
                    },
                    failure: function (response) {
                        console.log(response.responseText);
                        document.getElementById('cameraSet').innerHTML = 'Set';
                        $('#cameraSet').prop('disabled', false);
                    },
                    error: function (response) {
                        console.log(response.responseText);
                        document.getElementById('cameraSet').innerHTML = 'Set';
                        $('#cameraSet').prop('disabled', false);
                   }
                });
            }            
            function GetFrame()
            {
                $.ajax({
                    type: 'GET',
                    url: '/api/frame/'+camera.id,
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    success: function (data) {
                        if(data != undefined)
                        {
                            document.getElementById('frameCount').innerHTML  = data.count;
                            document.getElementById('frameValue').src = 'data:image/jpeg;base64,'+data.value;
                            document.getElementById('frameDiv').style = '';
                        }
                        else
                            document.getElementById('frameDiv').style = 'display:none';
                        setTimeout(() => GetFrame(), 50);
                    },
                    error: function (req, status, error) {
                        @*console.log(req);
                        console.log(status);
                        console.log(error);*@
                        setTimeout(() => GetFrame(), 500);
                    }
                }); 
            }

            function GetCamera()
            {
                $.ajax({
                    type: 'GET',
                    url: '/api/camera',
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    success: function (data) {                        
                        if(data != undefined)
                        {
                            camera = data[0];
                            document.getElementById('cameraWidth').value = camera.width;
                            document.getElementById('cameraHeight').value = camera.height;
                            document.getElementById('cameraISO').value = camera.iso;
                            document.getElementById('cameraShutter').value = camera.shutter;
                            document.getElementById('cameraQuality').value = camera.quality;
                            document.getElementById('panelDiv').style = '';                            

                            document.getElementById('cameraSet').onclick = SetCameraParameters;
                            GetFrame();
                        }
                    },
                    error: function (req, status, error) {
                        console.log(req);
                        console.log(status);
                        console.log(error);
                    }
                }); 
            }
            GetCamera();
        });
    </script>
}