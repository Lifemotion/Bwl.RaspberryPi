@page
@model CameraModel
@{
    ViewData["Title"] = "Camera";
}

<div>
    <h1 class="display-4">@ViewBag.Title</h1>
    <div id="panelDiv" style="display:none">
        <div class="form-inline">
            <div class="form-group mb-2">
                <label for="cameraWidth" class="sr-only">Width</label>
                <input class="form-control" id="cameraWidth" type="text" placeholder="Width" />            
            </div>
            <div class="form-group mx-sm-3 mb-2">
                <label for="cameraHeight" class="sr-only">Height</label>
                <input class="form-control" id="cameraHeight" type="text" placeholder="Height" />            
            </div>
            <div class="form-group mx-sm-3 mb-2">
                <label for="cameraISO" class="sr-only">ISO</label>
                <input class="form-control" id="cameraISO" type="text" placeholder="ISO" />            
            </div>
            <div class="form-group mx-sm-3 mb-2">
                <label for="cameraShutter" class="sr-only">Shutter</label>
                <input class="form-control" id="cameraShutter" type="text" placeholder="Shutter" />            
            </div>
            <div class="form-group mx-sm-3 mb-2">
                <label for="cameraQuality" class="sr-only">Quality</label>
                <input class="form-control" id="cameraQuality" type="text" placeholder="Quality" />            
            </div>
            <input class="btn btn-primary mb-2" id="btnSet" type="button" value="Set" />
        </div>
        <div id="frameDiv" style="display:none">
            <p>
                Count: <span id="frameCount"></span>
            </p>
            <img id="frameValue" class="img-fluid" src=""/>
        </div>
    </div>
</div>


@section Scripts
{
    <script>
        $(document).ready(function () {
            let camera = {};
            function SetCameraParameters()
            {
                if(document.getElementById('cameraWidth').value != '')
                {
                    camera.width = parseInt(document.getElementById('cameraWidth').value);
                }
                if(document.getElementById('cameraHeight').value != '')
                {
                    camera.height = parseInt(document.getElementById('cameraHeight').value);
                }
                if(document.getElementById('cameraISO').value != '')
                {
                    camera.iso = parseInt(document.getElementById('cameraISO').value);
                }
                if(document.getElementById('cameraShutter').value != '')
                {
                    camera.shutter = parseInt(document.getElementById('cameraShutter').value);
                }
                if(document.getElementById('cameraQuality').value != '')
                {
                    camera.quality = parseInt(document.getElementById('cameraQuality').value);
                }
                $.ajax({
                    type: 'PUT',
                    url: '/api/camera/'+camera.id,
                    data: JSON.stringify(camera),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    headers: { RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()},
                    success: function (response) {
                    },
                    failure: function (response) {
                        console.log(response.responseText);
                    },
                    error: function (response) {
                        console.log(response.responseText);
                   }
                });
            }            
            function GetFrame()
            {
                $.ajax({
                    type: 'GET',
                    url: '/api/frame/'+camera.id,
                    dataType: 'json',
                    success: function (data) {
                        if(data != undefined)
                        {
                            document.getElementById('frameCount').innerHTML  = data.count;
                            document.getElementById('frameValue').src = 'data:image/jpeg;base64,'+data.value;
                            document.getElementById('frameDiv').style = '';
                        }else
                        {
                            document.getElementById('frameDiv').style = 'display:none';
                        }
                        setTimeout(() => GetFrame(), 100);
                    },
                    error: function (req, status, error) {
                        console.log(msg);
                        setTimeout(() => GetFrame(), 100);
                    }
                }); 
            }

            function GetCamera()
            {
                $.ajax({
                    type: 'GET',
                    url: '/api/camera',
                    dataType: 'json',
                    success: function (data) {                        
                        if(data != undefined)
                        {
                            camera = data[0];
                            document.getElementById('cameraWidth').value = camera.width;
                            document.getElementById('cameraHeight').value = camera.height;
                            document.getElementById('cameraISO').value = camera.iso;
                            document.getElementById('cameraShutter').value = camera.shutter;
                            document.getElementById('cameraQuality').value = camera.quality;
                            document.getElementById('panelDiv').style = '';                            

                            document.getElementById('btnSet').onclick = SetCameraParameters;                            
                            GetFrame();
                        }
                    },
                    error: function (req, status, error) {
                        console.log(msg);
                    }
                }); 
            }

            GetCamera();
        });
    </script>
}